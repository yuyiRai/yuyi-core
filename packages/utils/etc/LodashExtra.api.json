{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.3.4",
    "schemaVersion": 1002,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "docComment": "",
  "name": "LodashExtra",
  "members": [{
    "kind": "EntryPoint",
    "name": "",
    "members": [{
      "kind": "Function",
      "docComment": "/**\n * 将一个非数组值转换为数组\n *\n * @remarks\n *\n * 注意，如果不允许空值（allowEmpty为false），即便输入值本身为数组也会进行过滤\n *\n * @param value - 输入值\n *\n * @param allowEmpty - 是否允许数组成员为nil（默认为true），false时会过滤掉null或undefined  @default\n *\n * @returns 由输入值转化而来的数组\n *\n * @example\n *\n * 允许为nil时\n * ```\n * castArray(null)\n * // => [null]\n *\n * castArray([undefined, null])\n * // => [undefined, null]\n * ```\n *\n * @example\n *\n * 不允许为nil时\n * ```\n * castArray(null, false)\n * // => []\n *\n * castArray([undefined, null], false)\n * // => []\n * ```\n *\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "castArray"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": " = "
      }, {
        "kind": "Content",
        "text": "any"
      }, {
        "kind": "Content",
        "text": ">("
      }, {
        "kind": "Reference",
        "text": "value"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": " | "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "[]"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "allowEmpty"
      }, {
        "kind": "Content",
        "text": "?: "
      }, {
        "kind": "Content",
        "text": "boolean"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "[]"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 18,
        "endIndex": 20
      },
      "releaseTag": "Public",
      "overloadIndex": 0,
      "parameters": [{
        "parameterName": "value",
        "parameterTypeTokenRange": {
          "startIndex": 9,
          "endIndex": 13
        }
      }, {
        "parameterName": "allowEmpty",
        "parameterTypeTokenRange": {
          "startIndex": 16,
          "endIndex": 17
        }
      }],
      "typeParameters": [{
        "typeParameterName": "T",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        }
      }],
      "name": "castArray"
    }, {
      "kind": "Function",
      "docComment": "/**\n * 计算用函数\n *\n * @param computedFunc - 计算用函数\n *\n * @param computedArgs - 计算用参数\n *\n * @returns computedFunc(...computedArgs) -> 计算结果\n *\n * @example\n * ```\n * castComputed((a, b, c) => a + b + c, 1, 2, 3);\n * // => 6\n * ```\n *\n * @example\n * ```\n * castComputed(a => a);\n * // => undefined\n * ```\n *\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "castComputed"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "Args"
      }, {
        "kind": "Content",
        "text": " extends "
      }, {
        "kind": "Content",
        "text": "any[]"
      }, {
        "kind": "Content",
        "text": ">("
      }, {
        "kind": "Reference",
        "text": "computedFunc"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "Type"
      }, {
        "kind": "Content",
        "text": "."
      }, {
        "kind": "Reference",
        "text": "Function"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "Args"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": ">"
      }, {
        "kind": "Content",
        "text": ", ..."
      }, {
        "kind": "Reference",
        "text": "computedArgs"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "Args"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 24,
        "endIndex": 25
      },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [{
        "parameterName": "computedFunc",
        "parameterTypeTokenRange": {
          "startIndex": 11,
          "endIndex": 19
        }
      }, {
        "parameterName": "computedArgs",
        "parameterTypeTokenRange": {
          "startIndex": 22,
          "endIndex": 23
        }
      }],
      "typeParameters": [{
        "typeParameterName": "T",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        }
      }, {
        "typeParameterName": "Args",
        "constraintTokenRange": {
          "startIndex": 7,
          "endIndex": 8
        },
        "defaultTypeTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        }
      }],
      "name": "castComputed"
    }, {
      "kind": "Function",
      "docComment": "/**\n * 计算用函数（同一性）\n *\n * @param nativeValue - 非函数的值\n *\n * @param args - 可以传入参数不过没用\n *\n * @returns 原值返回\n *\n * @example\n * ```\n * castComputed(1, 2, 3);\n * // => 1\n * ```\n *\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "castComputed"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": " extends "
      }, {
        "kind": "Reference",
        "text": "NotFunction"
      }, {
        "kind": "Content",
        "text": ">("
      }, {
        "kind": "Reference",
        "text": "nativeValue"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 11,
        "endIndex": 12
      },
      "releaseTag": "Public",
      "overloadIndex": 2,
      "parameters": [{
        "parameterName": "nativeValue",
        "parameterTypeTokenRange": {
          "startIndex": 9,
          "endIndex": 10
        }
      }],
      "typeParameters": [{
        "typeParameterName": "T",
        "constraintTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        },
        "defaultTypeTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        }
      }],
      "name": "castComputed"
    }, {
      "kind": "Function",
      "docComment": "/**\n * 将输入值转换为function\n *\n * @remarks\n *\n * `deepClone`为`true`时，返回的对象会解除和原对象的引用\n *\n * @param withFunction - 输入值\n *\n * @param deepClone - `default: false`对于对象，是否返回深拷贝\n *\n * @returns 输入值类型为`function`时直接返回输入值<P/> 其他情况返回一个`function`，这个`function`会返回你的输入值\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "castFunction"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": " = "
      }, {
        "kind": "Content",
        "text": "any"
      }, {
        "kind": "Content",
        "text": ">("
      }, {
        "kind": "Reference",
        "text": "withFunction"
      }, {
        "kind": "Content",
        "text": "?: "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "deepClone"
      }, {
        "kind": "Content",
        "text": "?: "
      }, {
        "kind": "Content",
        "text": "boolean"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Reference",
        "text": "Type"
      }, {
        "kind": "Content",
        "text": "."
      }, {
        "kind": "Reference",
        "text": "Function"
      }, {
        "kind": "Content",
        "text": "<any[], "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": ">"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 15,
        "endIndex": 21
      },
      "releaseTag": "Public",
      "overloadIndex": 0,
      "parameters": [{
        "parameterName": "withFunction",
        "parameterTypeTokenRange": {
          "startIndex": 9,
          "endIndex": 10
        }
      }, {
        "parameterName": "deepClone",
        "parameterTypeTokenRange": {
          "startIndex": 13,
          "endIndex": 14
        }
      }],
      "typeParameters": [{
        "typeParameterName": "T",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        }
      }],
      "name": "castFunction"
    }, {
      "kind": "Function",
      "docComment": "/**\n * @param  - objOrArr\n *\n * @param  - allowEmpty\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "castObjectArray"
      }, {
        "kind": "Content",
        "text": "("
      }, {
        "kind": "Reference",
        "text": "objOrArr"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Content",
        "text": "any[]"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "allowEmpty"
      }, {
        "kind": "Content",
        "text": "?: "
      }, {
        "kind": "Content",
        "text": "boolean"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Content",
        "text": "any[]"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 11,
        "endIndex": 12
      },
      "releaseTag": "Public",
      "overloadIndex": 0,
      "parameters": [{
        "parameterName": "objOrArr",
        "parameterTypeTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        }
      }, {
        "parameterName": "allowEmpty",
        "parameterTypeTokenRange": {
          "startIndex": 9,
          "endIndex": 10
        }
      }],
      "name": "castObjectArray"
    }, {
      "kind": "Function",
      "docComment": "",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "castString"
      }, {
        "kind": "Content",
        "text": "("
      }, {
        "kind": "Reference",
        "text": "value"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Content",
        "text": "any"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Content",
        "text": "string"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 7,
        "endIndex": 8
      },
      "releaseTag": "Public",
      "overloadIndex": 0,
      "parameters": [{
        "parameterName": "value",
        "parameterTypeTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        }
      }],
      "name": "castString"
    }, {
      "kind": "Function",
      "docComment": "/**\n * 根据条件将一个数组拆分为多个数组\n *\n * @remarks\n *\n * 更复杂的控制参照{@link https://www.lodashjs.com/docs/latest#_groupbycollection-iteratee_identity | Lodash.groupBy}\n *\n * @param list - 源数组\n *\n * @param keyOrWith - 分组关键字或方法（返回一个关键字）\n *\n * @typeParam T - 原数组的成员类型（必须为Object）\n *\n * @returns 返回一个新对象\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "createGroupWith"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": " extends "
      }, {
        "kind": "Content",
        "text": "object "
      }, {
        "kind": "Content",
        "text": "= "
      }, {
        "kind": "Content",
        "text": "any"
      }, {
        "kind": "Content",
        "text": ">("
      }, {
        "kind": "Reference",
        "text": "list"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "[]"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "keyOrWith"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Content",
        "text": "string | (("
      }, {
        "kind": "Reference",
        "text": "item"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": ") => string)"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Reference",
        "text": "IKeyValueMap"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "[]>"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 22,
        "endIndex": 26
      },
      "releaseTag": "Public",
      "overloadIndex": 0,
      "parameters": [{
        "parameterName": "list",
        "parameterTypeTokenRange": {
          "startIndex": 11,
          "endIndex": 13
        }
      }, {
        "parameterName": "keyOrWith",
        "parameterTypeTokenRange": {
          "startIndex": 16,
          "endIndex": 21
        }
      }],
      "typeParameters": [{
        "typeParameterName": "T",
        "constraintTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        },
        "defaultTypeTokenRange": {
          "startIndex": 7,
          "endIndex": 8
        }
      }],
      "name": "createGroupWith"
    }, {
      "kind": "Variable",
      "docComment": "/**\n * 一个静态的不可变空对象\n */\n",
      "excerptTokens": [{
        "kind": "Reference",
        "text": "emptyObject"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Content",
        "text": "object"
      }],
      "releaseTag": "Public",
      "name": "emptyObject",
      "variableTypeTokenRange": {
        "startIndex": 2,
        "endIndex": 3
      }
    }, {
      "kind": "Function",
      "docComment": "/**\n * Checks if value is classified as a Number primitive or object. Note: To exclude Infinity, -Infinity, and NaN, which are classified as numbers, use the _.isFinite method.\n *\n * @param  - value — The value to check.\n *\n * @param  - allowNaN\n *\n * @returns — Returns true if value is correctly classified, else false.\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "isNumber"
      }, {
        "kind": "Content",
        "text": "("
      }, {
        "kind": "Reference",
        "text": "value"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Content",
        "text": "any"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "allowNaN"
      }, {
        "kind": "Content",
        "text": "?: "
      }, {
        "kind": "Content",
        "text": "boolean"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Reference",
        "text": "value"
      }, {
        "kind": "Content",
        "text": " is number"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 11,
        "endIndex": 13
      },
      "releaseTag": "Public",
      "overloadIndex": 0,
      "parameters": [{
        "parameterName": "value",
        "parameterTypeTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        }
      }, {
        "parameterName": "allowNaN",
        "parameterTypeTokenRange": {
          "startIndex": 9,
          "endIndex": 10
        }
      }],
      "name": "isNumber"
    }, {
      "kind": "TypeAlias",
      "docComment": "",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare type "
      }, {
        "kind": "Reference",
        "text": "NotFunction"
      }, {
        "kind": "Content",
        "text": " = "
      }, {
        "kind": "Content",
        "text": "string | symbol | object | number | boolean"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "releaseTag": "Public",
      "name": "NotFunction",
      "typeTokenRange": {
        "startIndex": 3,
        "endIndex": 4
      }
    }, {
      "kind": "Function",
      "docComment": "/**\n * 近似_.map，callback需返回一个Object，最后将所有返回的Object组合为一个Object\n *\n * @remarks\n *\n * see: _.map\n *\n * @param  - collection\n *\n * @param  - callback\n *\n * @param  - accumulator 基于预先存在的Object\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "reduceMap"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "Result"
      }, {
        "kind": "Content",
        "text": " extends "
      }, {
        "kind": "Reference",
        "text": "IKeyValueMap"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": " = "
      }, {
        "kind": "Content",
        "text": "{\n    ["
      }, {
        "kind": "Reference",
        "text": "K"
      }, {
        "kind": "Content",
        "text": " in keyof "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "]?: "
      }, {
        "kind": "Reference",
        "text": "Result"
      }, {
        "kind": "Content",
        "text": ";\n}"
      }, {
        "kind": "Content",
        "text": ">("
      }, {
        "kind": "Reference",
        "text": "collection"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "List"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "> | "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "[] | null | undefined"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "callback"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "ReduceMapObjectIterator"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "List"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "> | "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "[] | null | undefined, "
      }, {
        "kind": "Reference",
        "text": "Result"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": ">"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "accumulator"
      }, {
        "kind": "Content",
        "text": "?: "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 47,
        "endIndex": 48
      },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [{
        "parameterName": "collection",
        "parameterTypeTokenRange": {
          "startIndex": 21,
          "endIndex": 27
        }
      }, {
        "parameterName": "callback",
        "parameterTypeTokenRange": {
          "startIndex": 30,
          "endIndex": 42
        }
      }, {
        "parameterName": "accumulator",
        "parameterTypeTokenRange": {
          "startIndex": 45,
          "endIndex": 46
        }
      }],
      "typeParameters": [{
        "typeParameterName": "T",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        }
      }, {
        "typeParameterName": "Result",
        "constraintTokenRange": {
          "startIndex": 7,
          "endIndex": 8
        },
        "defaultTypeTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        }
      }, {
        "typeParameterName": "TResult",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 11,
          "endIndex": 18
        }
      }],
      "name": "reduceMap"
    }, {
      "kind": "Function",
      "docComment": "/**\n * @remarks\n *\n * see: _.reduce\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "reduceMap"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": " extends "
      }, {
        "kind": "Reference",
        "text": "IKeyValueMap"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "Result"
      }, {
        "kind": "Content",
        "text": " = "
      }, {
        "kind": "Content",
        "text": "any"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": " = "
      }, {
        "kind": "Content",
        "text": "{\n    ["
      }, {
        "kind": "Reference",
        "text": "K"
      }, {
        "kind": "Content",
        "text": " in keyof "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": "]?: "
      }, {
        "kind": "Reference",
        "text": "Result"
      }, {
        "kind": "Content",
        "text": ";\n}"
      }, {
        "kind": "Content",
        "text": ">("
      }, {
        "kind": "Reference",
        "text": "collection"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": " | null | undefined"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "callback"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "ReduceMapObjectIterator"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "T"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "Result"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": ">"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "accumulator"
      }, {
        "kind": "Content",
        "text": "?: "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 41,
        "endIndex": 42
      },
      "releaseTag": "Public",
      "overloadIndex": 2,
      "parameters": [{
        "parameterName": "collection",
        "parameterTypeTokenRange": {
          "startIndex": 23,
          "endIndex": 25
        }
      }, {
        "parameterName": "callback",
        "parameterTypeTokenRange": {
          "startIndex": 28,
          "endIndex": 36
        }
      }, {
        "parameterName": "accumulator",
        "parameterTypeTokenRange": {
          "startIndex": 39,
          "endIndex": 40
        }
      }],
      "typeParameters": [{
        "typeParameterName": "T",
        "constraintTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        },
        "defaultTypeTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        }
      }, {
        "typeParameterName": "Result",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 9,
          "endIndex": 10
        }
      }, {
        "typeParameterName": "TResult",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 13,
          "endIndex": 20
        }
      }],
      "name": "reduceMap"
    }, {
      "kind": "TypeAlias",
      "docComment": "",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare type "
      }, {
        "kind": "Reference",
        "text": "ReduceMapObjectIterator"
      }, {
        "kind": "Content",
        "text": "<"
      }, {
        "kind": "Reference",
        "text": "TSource"
      }, {
        "kind": "Content",
        "text": " = "
      }, {
        "kind": "Content",
        "text": "any"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "Result"
      }, {
        "kind": "Content",
        "text": " = "
      }, {
        "kind": "Reference",
        "text": "TSource"
      }, {
        "kind": "Content",
        "text": "[keyof "
      }, {
        "kind": "Reference",
        "text": "TSource"
      }, {
        "kind": "Content",
        "text": "]"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": " = "
      }, {
        "kind": "Content",
        "text": "{\n    ["
      }, {
        "kind": "Reference",
        "text": "K"
      }, {
        "kind": "Content",
        "text": " in keyof "
      }, {
        "kind": "Reference",
        "text": "TSource"
      }, {
        "kind": "Content",
        "text": "]?: "
      }, {
        "kind": "Reference",
        "text": "Result"
      }, {
        "kind": "Content",
        "text": ";\n}"
      }, {
        "kind": "Content",
        "text": "> = "
      }, {
        "kind": "Content",
        "text": "("
      }, {
        "kind": "Reference",
        "text": "curr"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "TSource"
      }, {
        "kind": "Content",
        "text": "[keyof "
      }, {
        "kind": "Reference",
        "text": "TSource"
      }, {
        "kind": "Content",
        "text": "], "
      }, {
        "kind": "Reference",
        "text": "key"
      }, {
        "kind": "Content",
        "text": ": keyof "
      }, {
        "kind": "Reference",
        "text": "TSource"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "source"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "TSource"
      }, {
        "kind": "Content",
        "text": ", "
      }, {
        "kind": "Reference",
        "text": "prev"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": ") => "
      }, {
        "kind": "Reference",
        "text": "TResult"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "releaseTag": "Public",
      "name": "ReduceMapObjectIterator",
      "typeParameters": [{
        "typeParameterName": "TSource",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        }
      }, {
        "typeParameterName": "Result",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 9,
          "endIndex": 13
        }
      }, {
        "typeParameterName": "TResult",
        "constraintTokenRange": {
          "startIndex": 0,
          "endIndex": 0
        },
        "defaultTypeTokenRange": {
          "startIndex": 16,
          "endIndex": 23
        }
      }],
      "typeTokenRange": {
        "startIndex": 24,
        "endIndex": 44
      }
    }, {
      "kind": "Function",
      "docComment": "/**\n * 一个静态函数\n *\n * @param args - 任意参数\n *\n * @returns 什么都不会返回\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "stubFunction"
      }, {
        "kind": "Content",
        "text": "(..."
      }, {
        "kind": "Reference",
        "text": "args"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Content",
        "text": "any[]"
      }, {
        "kind": "Content",
        "text": "): "
      }, {
        "kind": "Content",
        "text": "void"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 7,
        "endIndex": 8
      },
      "releaseTag": "Public",
      "overloadIndex": 0,
      "parameters": [{
        "parameterName": "args",
        "parameterTypeTokenRange": {
          "startIndex": 5,
          "endIndex": 6
        }
      }],
      "name": "stubFunction"
    }, {
      "kind": "Function",
      "docComment": "/**\n * 一个静态函数，返回一个对象\n *\n * @returns 一个静态的空对象，多次调用也永远指向同一个内存地址\n */\n",
      "excerptTokens": [{
        "kind": "Content",
        "text": "export declare function "
      }, {
        "kind": "Reference",
        "text": "stubObjectStatic"
      }, {
        "kind": "Content",
        "text": "(): "
      }, {
        "kind": "Content",
        "text": "object"
      }, {
        "kind": "Content",
        "text": ";"
      }],
      "returnTypeTokenRange": {
        "startIndex": 3,
        "endIndex": 4
      },
      "releaseTag": "Public",
      "overloadIndex": 0,
      "parameters": [],
      "name": "stubObjectStatic"
    }, {
      "kind": "Variable",
      "docComment": "",
      "excerptTokens": [{
        "kind": "Reference",
        "text": "test"
      }, {
        "kind": "Content",
        "text": ": "
      }, {
        "kind": "Content",
        "text": "any[]"
      }],
      "releaseTag": "Public",
      "name": "test",
      "variableTypeTokenRange": {
        "startIndex": 2,
        "endIndex": 3
      }
    }]
  }]
}