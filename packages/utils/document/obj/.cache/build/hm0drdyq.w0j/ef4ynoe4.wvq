<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title> </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content=" ">
    <meta name="generator" content="docfx 2.43.3.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="CustomUtils!">
  
  
  <h1 id="CustomUtils_" data-uid="CustomUtils!"></h1>
  <div class="markdown level0 summary"></div>
  <div class="markdown level0 conceptual"></div>
  <h3 id="functions">
  </h3>
  
  
  <h4 id="CustomUtils_autoBindObj_function_1_" data-uid="CustomUtils!autoBindObj:function(1)">autoBindObj(obj, isCloneDeep)</h4>
  <div class="markdown level1 summary"><p>自动绑定对象中的方法的this</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function autoBindObj&lt;T&gt;(obj: T, isCloneDeep?: boolean): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isCloneDeep</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_cleanTimeProfile_function_1_" data-uid="CustomUtils!cleanTimeProfile:function(1)">cleanTimeProfile()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function cleanTimeProfile(): void;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">void</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_connectTo_function_1_" data-uid="CustomUtils!connectTo:function(1)">connectTo(target, source, keyNames)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function connectTo(target: any, source: any, ...keyNames: string[]): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string[]</span></td>
        <td><em>keyNames</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_createObjectKey_function_1_" data-uid="CustomUtils!createObjectKey:function(1)">createObjectKey(obj)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function createObjectKey(obj: any): string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_downloadFile_function_1_" data-uid="CustomUtils!downloadFile:function(1)">downloadFile(fileId, fileName, getUrl)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function downloadFile(fileId: string, fileName: string, getUrl: ((id: string) =&gt; string)): void;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>fileId</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>fileName</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">((id: string) =&gt; string)</span></td>
        <td><em>getUrl</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">void</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_getListDifferent_function_1_" data-uid="CustomUtils!getListDifferent:function(1)">getListDifferent(listA, listB, deep)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getListDifferent(listA: any[], listB: any[], deep?: boolean): {
    push: any[];
    pull: any[];
};</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>listA</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>listB</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>deep</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">{
    push: any[];
    pull: any[];
}</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_getRealLength_function_1_" data-uid="CustomUtils!getRealLength:function(1)">getRealLength(str)</h4>
  <div class="markdown level1 summary"><p>获得字符串实际长度，中文占2，英文占1</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getRealLength(str: string): number;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>str</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_getTime_function_1_" data-uid="CustomUtils!getTime:function(1)">getTime()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getTime(): number;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_getTimeProfile_function_1_" data-uid="CustomUtils!getTimeProfile:function(1)">getTimeProfile()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getTimeProfile(): number;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_likeArray_function_1_" data-uid="CustomUtils!likeArray:function(1)">likeArray(target, other)</h4>
  <div class="markdown level1 summary"><p>判断两个数组是否相似</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function likeArray(target: any[], other: any[]): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>target</em></td>
        <td>
          <p>原数组</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>other</em></td>
        <td>
          <p>比较数组</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="CustomUtils_likeArray_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p># **注意** 该方法的比较是相似而非相等</p>
</div>
  
  
  <h4 id="CustomUtils_MultipleSplit_function_1_" data-uid="CustomUtils!MultipleSplit:function(1)">MultipleSplit(txt, str, index)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function MultipleSplit(txt: string, str: string, index?: number): any[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>txt</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>str</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>index</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_nextTick_function_1_" data-uid="CustomUtils!nextTick:function(1)">nextTick()</h4>
  <div class="markdown level1 summary"><p>等待下一帧cpu时序</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function nextTick(): Promise&lt;void&gt;;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span>&lt;void&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_pipe_function_1_" data-uid="CustomUtils!pipe:function(1)">pipe(initialValue, funcArr)</h4>
  <div class="markdown level1 summary"><p>管道</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function pipe&lt;T, R, F extends ((v: T) =&gt; R)&gt;(initialValue: T, ...funcArr: F[]): R;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>initialValue</em></td>
        <td>
          <p>原始值</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">F[]</span></td>
        <td><em>funcArr</em></td>
        <td>
          <p>函数</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">R</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>R</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>F</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_shiftKeyGroup_function_1_" data-uid="CustomUtils!shiftKeyGroup:function(1)">shiftKeyGroup(obj, shiftKeysMap, shiftMode)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function shiftKeyGroup&lt;T, K extends keyof T, Map extends Record&lt;K, K | string&gt;&gt;(obj: Record&lt;string | number | K, any&gt;, shiftKeysMap: Partial&lt;Map&gt;, shiftMode?: ShiftMode): Record&lt;K, any&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Record</span>&lt;string | number | K, any&gt;</td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Partial</span>&lt;Map&gt;</td>
        <td><em>shiftKeysMap</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">ShiftMode</span></td>
        <td><em>shiftMode</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Record</span>&lt;K, any&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Map</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_shiftKeyGroup_function_2_" data-uid="CustomUtils!shiftKeyGroup:function(2)">shiftKeyGroup(obj, shiftKeysMap, shifter)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function shiftKeyGroup&lt;T extends Record&lt;any, any&gt;, K extends keyof T, Map = Record&lt;string | number | K, string | number | K&gt;&gt;(obj: any, shiftKeysMap: Map, shifter: (key: string, map: Map) =&gt; string | false | void | undefined | null): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Map</span></td>
        <td><em>shiftKeysMap</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(key: string, map: Map) =&gt; string | false | void | undefined | null</span></td>
        <td><em>shifter</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Map</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_sleep_function_1_" data-uid="CustomUtils!sleep:function(1)">sleep(time, emitValue, isError)</h4>
  <div class="markdown level1 summary"><p>异步等候</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function sleep&lt;V = void&gt;(time: number, emitValue?: V, isError?: boolean): Promise&lt;V&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>time</em></td>
        <td>
          <p>等候时间</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">V</span></td>
        <td><em>emitValue</em></td>
        <td>
          <p>默认不需要</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isError</em></td>
        <td>
          <p>是否以reject</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span>&lt;V&gt;</td>
        <td><p>返回Promise<emitvalue><p>
</emitvalue></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>V</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_timeProfile_function_1_" data-uid="CustomUtils!timeProfile:function(1)">timeProfile()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function timeProfile(): void;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">void</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_uuid_function_1_" data-uid="CustomUtils!uuid:function(1)">uuid()</h4>
  <div class="markdown level1 summary"><p>生成uuid</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function uuid(): string;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_zipEmptyData_function_1_" data-uid="CustomUtils!zipEmptyData:function(1)">zipEmptyData(target, isRemoveRepeat)</h4>
  <div class="markdown level1 summary"><p>压缩数据结构，清除所有空值 对象为key-value对会删除值为空的key，如果对象为Array会挤掉空的下标，但不会影响下标顺序</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function zipEmptyData&lt;T = any&gt;(target: Array&lt;T | undefined | null&gt;, isRemoveRepeat?: boolean): T[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Array</span>&lt;T | undefined | null&gt;</td>
        <td><em>target</em></td>
        <td>
          <p>目标对象</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isRemoveRepeat</em></td>
        <td>
          <p>是否移除重复（浅比较）的值（默认为true）</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CustomUtils_zipEmptyData_function_2_" data-uid="CustomUtils!zipEmptyData:function(2)">zipEmptyData(target, isRemoveRepeat)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function zipEmptyData&lt;T = any&gt;(target: IKeyValueMap&lt;T | undefined | null&gt;, isRemoveRepeat?: boolean): IKeyValueMap&lt;T&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IKeyValueMap</span>&lt;T | undefined | null&gt;</td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isRemoveRepeat</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IKeyValueMap</span>&lt;T&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
