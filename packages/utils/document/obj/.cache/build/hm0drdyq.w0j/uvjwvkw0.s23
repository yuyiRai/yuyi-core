<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title> </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content=" ">
    <meta name="generator" content="docfx 2.43.3.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="@yuyi919/utils!">
  
  
  <h1 id="_yuyi919_utils_" data-uid="@yuyi919/utils!"></h1>
  <div class="markdown level0 summary"><p>yuyi</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <h3 id="functions">
  </h3>
  
  
  <h4 id="_yuyi919_utils_argShifter_function_1_" data-uid="@yuyi919/utils!argShifter:function(1)">argShifter(fn, startIndex, endIndex)</h4>
  <div class="markdown level1 summary"><p>函数参数偏移</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function argShifter(fn: (...values: any[]) =&gt; any, startIndex?: number, endIndex?: number): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">(...values: any[]) =&gt; any</span></td>
        <td><em>fn</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>startIndex</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>endIndex</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_autoBindObj_function_1_" data-uid="@yuyi919/utils!autoBindObj:function(1)">autoBindObj(obj, isCloneDeep)</h4>
  <div class="markdown level1 summary"><p>自动绑定对象中的方法的this</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function autoBindObj&lt;T&gt;(obj: T, isCloneDeep?: boolean): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isCloneDeep</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_castArray_function_1_" data-uid="@yuyi919/utils!castArray:function(1)">castArray(value, allowEmpty)</h4>
  <div class="markdown level1 summary"><p>将一个非数组值转换为数组</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function castArray&lt;T = any&gt;(value: T | T[], allowEmpty?: boolean | 'strict'): T[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T | T[]</span></td>
        <td><em>value</em></td>
        <td>
          <p>输入值</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean | &#39;strict&#39;</span></td>
        <td><em>allowEmpty</em></td>
        <td>
          <p>是否允许数组成员为nil（默认为true），false时会过滤掉null或undefined</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><p>由输入值转化而来的数组</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_castArray_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>注意，如果不允许空值（allowEmpty为false），即便输入值本身为数组也会进行过滤</p>
</div>
  
  
  <h4 id="_yuyi919_utils_castComputed_function_1_" data-uid="@yuyi919/utils!castComputed:function(1)">castComputed(computedFunc, computedArgs)</h4>
  <div class="markdown level1 summary"><p>计算用函数</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function castComputed&lt;T, Args extends any[]&gt;(computedFunc: Type.Function&lt;Args, T&gt;, ...computedArgs: Args): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span>.Function&lt;Args, T&gt;</td>
        <td><em>computedFunc</em></td>
        <td>
          <p>计算用函数</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Args</span></td>
        <td><em>computedArgs</em></td>
        <td>
          <p>计算用参数</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><p>computedFunc(...computedArgs) -<!-- -->&gt; 计算结果</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Args</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_castComputed_function_2_" data-uid="@yuyi919/utils!castComputed:function(2)">castComputed(nativeValue, args)</h4>
  <div class="markdown level1 summary"><p>计算用函数（同一性）</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function castComputed&lt;T extends NotFunction&gt;(nativeValue: T, ...args: any[]): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>nativeValue</em></td>
        <td>
          <p>非函数的值</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>args</em></td>
        <td>
          <p>可以传入参数不过没用</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><p>原值返回</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_castComputedPipe_function_1_" data-uid="@yuyi919/utils!castComputedPipe:function(1)">castComputedPipe(func, value)</h4>
  <div class="markdown level1 summary"><p>计算用管道函数，如果非函数则传递值自身</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function castComputedPipe&lt;V, T = V&gt;(func: Type.Function&lt;[V], T&gt; | T, value: V): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span>.Function&lt;[V], T&gt; | T</td>
        <td><em>func</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">V</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>V</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_castFunction_function_1_" data-uid="@yuyi919/utils!castFunction:function(1)">castFunction(withFunction, raw)</h4>
  <div class="markdown level1 summary"><p>将参数转换为function</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function castFunction&lt;T = any&gt;(withFunction?: T, raw?: boolean): Type.Function&lt;any[], T&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>withFunction</em></td>
        <td>
          <p>参数</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>raw</em></td>
        <td>
          <p><code>default: false</code><!-- -->是否返回深拷贝的值而非引用值（通常为对象）</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span>.Function&lt;any[], T&gt;</td>
        <td><p>参数类型为<code>function</code><!-- -->时直接返回参数<p> 其他情况返回一个<code>function</code><!-- -->，这个<code>function</code><!-- -->会返回你的参数</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_castFunction_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p><code>raw</code><!-- -->为<code>true</code><!-- -->时，返回的对象会进行深拷贝（完全解除和原对象的引用）</p>
</div>
  
  
  <h4 id="_yuyi919_utils_castObject_function_1_" data-uid="@yuyi919/utils!castObject:function(1)">castObject(target, keyInObject, checkRequired)</h4>
  <div class="markdown level1 summary"><p>转化一个对象为object 如果对象不是object，则返回一个嵌入指定key的新对象 可选第三个参数，判断条件变更为是否存在指定key的对象</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function castObject&lt;T, K extends KeyOf&lt;T&gt; | string&gt;(target: T | BaseType, keyInObject: K, checkRequired?: boolean): Exclude&lt;T, BaseType&gt; &amp; {
    [Key in K]: T extends object ? (K extends KeyOf&lt;T&gt; ? T[K] : unknown) : unknown;
};</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>T | <span class="xref">BaseType</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">K</span></td>
        <td><em>keyInObject</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>checkRequired</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Exclude</span>&lt;T, <span class="xref">BaseType</span>&gt; &amp; {
    [Key in K]: T extends object ? (K extends <span class="xref">KeyOf</span>&lt;T&gt; ? T[K] : unknown) : unknown;
}</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_castString_function_1_" data-uid="@yuyi919/utils!castString:function(1)">castString(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function castString(value: any): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_cleanTimeProfile_function_1_" data-uid="@yuyi919/utils!cleanTimeProfile:function(1)">cleanTimeProfile()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function cleanTimeProfile(): void;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">void</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_connectTo_function_1_" data-uid="@yuyi919/utils!connectTo:function(1)">connectTo(target, source, keyNames)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function connectTo(target: any, source: any, ...keyNames: string[]): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string[]</span></td>
        <td><em>keyNames</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_convertArr2Map_function_1_" data-uid="@yuyi919/utils!convertArr2Map:function(1)">convertArr2Map(arr)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function convertArr2Map(arr: string[]): IKeyValueMap&lt;true&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string[]</span></td>
        <td><em>arr</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IKeyValueMap</span>&lt;true&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_convertKeys2ValuesMap_function_1_" data-uid="@yuyi919/utils!convertKeys2ValuesMap:function(1)">convertKeys2ValuesMap(obj)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function convertKeys2ValuesMap&lt;O extends IKeyValueMap&lt;string&gt;&gt;(obj: O): {
    [K in O[keyof O]]: K;
};</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">O</span></td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">{
    [K in O[keyof O]]: K;
}</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>O</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_convertMap2UnieqArray_function_1_" data-uid="@yuyi919/utils!convertMap2UnieqArray:function(1)">convertMap2UnieqArray(obj, defineKey)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function convertMap2UnieqArray&lt;Target extends {}, Keys extends string, Map extends {
    [k in Keys]: Target;
}, PrimaryKey extends string = 'key'&gt;(obj: Map, defineKey?: PrimaryKey): ({
    [Key in (keyof Target | PrimaryKey)]?: Key extends keyof Target ? Target[Key] : Keys;
} &amp; {
    [key: string]: any;
})[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Map</span></td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">PrimaryKey</span></td>
        <td><em>defineKey</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">({
    [Key in (keyof Target | PrimaryKey)]?: Key extends keyof Target ? Target[Key] : Keys;
} &amp; {
    [key: string]: any;
})[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>Target</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Keys</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Map</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>PrimaryKey</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_convertOptions2Map_function_1_" data-uid="@yuyi919/utils!convertOptions2Map:function(1)">convertOptions2Map(arr, labelKey, valKey)</h4>
  <div class="markdown level1 summary"><p>将下拉OptionList转化为Map<!-- -->&lt;<!-- -->value, label<!-- -->&gt;<!-- -->用于快速翻译查表</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function convertOptions2Map&lt;T extends IKeyValueMap&gt;(arr: T[], labelKey?: TKey, valKey?: TKey): IKeyValueMap;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><em>arr</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TKey</span></td>
        <td><em>labelKey</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TKey</span></td>
        <td><em>valKey</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IKeyValueMap</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_convertValueOption_function_1_" data-uid="@yuyi919/utils!convertValueOption:function(1)">convertValueOption(valueList, useLabel)</h4>
  <div class="markdown level1 summary"><p>将一个数据数组转换为OptoinsList</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function convertValueOption(valueList: (string | number)[], useLabel?: boolean): Option[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">(string | number)[]</span></td>
        <td><em>valueList</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>useLabel</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Option</span>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_createDecoratorBase_function_1_" data-uid="@yuyi919/utils!createDecoratorBase:function(1)">createDecoratorBase(key, value)</h4>
  <div class="markdown level1 summary"><p>创建装饰器</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function createDecoratorBase&lt;BaseTarget extends Record&lt;string, any&gt;, Init extends Record&lt;string, any&gt; | Function&gt;(key: string, value: Init): (&lt;T extends BaseTarget&gt;(validConstractor?: ConstructorType&lt;T, [any?, any?, ...any[]]&gt;) =&gt; InjectContainer&lt;T&gt;) &amp; DecoratorContextBase&lt;BaseTarget, Init, Init extends Function ? true : false, Init extends (...args: any[]) =&gt; infer T_1 ? T_1 : Init, keyof BaseTarget, Record&lt;keyof BaseTarget, PropertyDescriptor&gt;&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>key</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Init</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>(&lt;T extends BaseTarget&gt;(validConstractor?: <span class="xref">ConstructorType</span>&lt;T, [any?, any?, ...any[]]&gt;) =&gt; <span class="xref">InjectContainer</span>&lt;T&gt;) &amp; <span class="xref">DecoratorContextBase</span>&lt;BaseTarget, Init, Init extends <span class="xref">Function</span> ? true : false, Init extends (...args: any[]) =&gt; infer T_1 ? T_1 : Init, keyof BaseTarget, <span class="xref">Record</span>&lt;keyof BaseTarget, <span class="xref">PropertyDescriptor</span>&gt;&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>BaseTarget</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Init</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_createEqualsMatcher_function_1_" data-uid="@yuyi919/utils!createEqualsMatcher:function(1)">createEqualsMatcher(searchKey)</h4>
  <div class="markdown level1 summary"><p>提供匹配方法/正则/匹配项数组/其它，返回通用匹配方法</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function createEqualsMatcher&lt;K = any&gt;(searchKey: SearchKey&lt;K&gt;): KeywordMatcher;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;K&gt;</td>
        <td><em>searchKey</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">KeywordMatcher</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_createGroupWith_function_1_" data-uid="@yuyi919/utils!createGroupWith:function(1)">createGroupWith(list, keyOrWith)</h4>
  <div class="markdown level1 summary"><p>根据条件将一个数组拆分为多个数组</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function createGroupWith&lt;T extends object = any&gt;(list: T[], keyOrWith: string | ((item: T) =&gt; string)): IKeyValueMap&lt;T[]&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><em>list</em></td>
        <td>
          <p>源数组</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string | ((item: T) =&gt; string)</span></td>
        <td><em>keyOrWith</em></td>
        <td>
          <p>分组关键字或方法（返回一个关键字）</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IKeyValueMap</span>&lt;T[]&gt;</td>
        <td><p>返回一个新对象</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td><p>原数组的成员类型（必须为Object）</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_createGroupWith_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>更复杂的控制参照<a href="https://www.lodashjs.com/docs/latest#_groupbycollection-iteratee_identity">Lodash.groupBy</a></p>
</div>
  
  
  <h4 id="_yuyi919_utils_createObjectKey_function_1_" data-uid="@yuyi919/utils!createObjectKey:function(1)">createObjectKey(obj)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function createObjectKey(obj: any): string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_createSearchMatcher_function_1_" data-uid="@yuyi919/utils!createSearchMatcher:function(1)">createSearchMatcher(searchKey)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function createSearchMatcher(searchKey: KeywordMatcher | RegExp): KeywordMatcher;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">KeywordMatcher</span> | <span class="xref">RegExp</span></td>
        <td><em>searchKey</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">KeywordMatcher</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_createSimpleTimeBufferInput_function_1_" data-uid="@yuyi919/utils!createSimpleTimeBufferInput:function(1)">createSimpleTimeBufferInput(callback, instance, time, isDeepDiff)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function createSimpleTimeBufferInput&lt;K extends object = Window, V = any&gt;(callback: CallbackFunction&lt;V&gt;, instance: K, time: number, isDeepDiff?: boolean): (value: V) =&gt; Promise&lt;any&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">CallbackFunction</span>&lt;V&gt;</td>
        <td><em>callback</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">K</span></td>
        <td><em>instance</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>time</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isDeepDiff</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>(value: V) =&gt; <span class="xref">Promise</span>&lt;any&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>V</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_createTrasaction_function_1_" data-uid="@yuyi919/utils!createTrasaction:function(1)">createTrasaction(runner)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function createTrasaction(runner?: (foreExit: () =&gt; void) =&gt; any): {
    runner: (foreExit: () =&gt; void) =&gt; any;
    lockSet: Set&lt;Promise&lt;unknown&gt;&gt;;
    generateLock(taskId?: string | number): () =&gt; void;
    waitLock(): boolean | Promise&lt;unknown&gt;;
    run&lt;T&gt;(runner: (foreExit: () =&gt; void) =&gt; T): Promise&lt;T&gt;;
    runInAsync&lt;T_1, Args extends any[]&gt;(runner: (...args: Args, foreExit: () =&gt; void) =&gt; Promise&lt;T_1&gt;, args: Args): Promise&lt;T_1&gt;;
};</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">(foreExit: () =&gt; void) =&gt; any</span></td>
        <td><em>runner</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>{
    runner: (foreExit: () =&gt; void) =&gt; any;
    lockSet: <span class="xref">Set</span>&lt;<span class="xref">Promise</span>&lt;unknown&gt;&gt;;
    generateLock(taskId?: string | number): () =&gt; void;
    waitLock(): boolean | <span class="xref">Promise</span>&lt;unknown&gt;;
    run&lt;T&gt;(runner: (foreExit: () =&gt; void) =&gt; T): <span class="xref">Promise</span>&lt;T&gt;;
    runInAsync&lt;T_1, Args extends any[]&gt;(runner: (...args: Args, foreExit: () =&gt; void) =&gt; <span class="xref">Promise</span>&lt;T_1&gt;, args: Args): <span class="xref">Promise</span>&lt;T_1&gt;;
}</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_deepPatchUpdate_function_1_" data-uid="@yuyi919/utils!deepPatchUpdate:function(1)">deepPatchUpdate(data, next, options)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function deepPatchUpdate&lt;T&gt;(data: T, next: T, options?: DeepPathUpdateOptions): PathUpdateResult&lt;T&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>data</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>next</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">DeepPathUpdateOptions</span></td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">PathUpdateResult</span>&lt;T&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_defaultFromKey_function_1_" data-uid="@yuyi919/utils!defaultFromKey:function(1)">defaultFromKey(target, key, source)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function defaultFromKey&lt;T&gt;(target: T, key: string, source: T): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>key</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_downloadFile_function_1_" data-uid="@yuyi919/utils!downloadFile:function(1)">downloadFile(fileId, fileName, getUrl)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function downloadFile(fileId: string, fileName: string, getUrl: ((id: string) =&gt; string)): void;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>fileId</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>fileName</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">((id: string) =&gt; string)</span></td>
        <td><em>getUrl</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">void</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_expectTo_function_1_" data-uid="@yuyi919/utils!expectTo:function(1)">expectTo(value, configs, elseValue)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function expectTo(value: any, configs: [any, any, boolean?][], elseValue?: any): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">[any, any, boolean?][]</span></td>
        <td><em>configs</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>elseValue</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_filterKeys_function_1_" data-uid="@yuyi919/utils!filterKeys:function(1)">filterKeys(target, filter)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function filterKeys(target: Record&lt;string, any&gt;, filter: (code: string, value?: any) =&gt; boolean): string[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Record</span>&lt;string, any&gt;</td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(code: string, value?: any) =&gt; boolean</span></td>
        <td><em>filter</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_filterMap_function_1_" data-uid="@yuyi919/utils!filterMap:function(1)">filterMap(arr, igronFilter, formatter)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function filterMap&lt;S = string, T = string&gt;(arr: any[], igronFilter: (value: any) =&gt; boolean, formatter?: (k: S) =&gt; T): T[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>arr</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(value: any) =&gt; boolean</span></td>
        <td><em>igronFilter</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(k: S) =&gt; T</span></td>
        <td><em>formatter</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>S</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_filterMapWith_function_1_" data-uid="@yuyi919/utils!filterMapWith:function(1)">filterMapWith(arr, igronValue, formatter)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function filterMapWith&lt;S = string, T = string&gt;(arr: any[], igronValue: any, formatter?: (k: S) =&gt; T): T[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>arr</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>igronValue</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(k: S) =&gt; T</span></td>
        <td><em>formatter</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>S</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_filterTo_function_1_" data-uid="@yuyi919/utils!filterTo:function(1)">filterTo(expect, values)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function filterTo&lt;Target&gt;(expect: (target: any) =&gt; boolean, ...values: any[]): Target | undefined;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">(target: any) =&gt; boolean</span></td>
        <td><em>expect</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>values</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Target | undefined</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>Target</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_format_function_1_" data-uid="@yuyi919/utils!format:function(1)">format(value, formatter)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function format(value: any, formatter?: EDateFormatter): string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">EDateFormatter</span></td>
        <td><em>formatter</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_formatterCol_function_1_" data-uid="@yuyi919/utils!formatterCol:function(1)">formatterCol(col)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function formatterCol(col: ColProps): IColProps;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">ColProps</span></td>
        <td><em>col</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IColProps</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_generateLock_function_1_" data-uid="@yuyi919/utils!generateLock:function(1)">generateLock(lockSet, taskId)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function generateLock(lockSet?: Set&lt;Promise&lt;unknown&gt;&gt;, taskId?: string | number): () =&gt; void;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Set</span>&lt;<span class="xref">Promise</span>&lt;unknown&gt;&gt;</td>
        <td><em>lockSet</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string | number</span></td>
        <td><em>taskId</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">() =&gt; void</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_generateNamespace_function_1_" data-uid="@yuyi919/utils!generateNamespace:function(1)">generateNamespace(target, keyName, prevIndex)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function generateNamespace&lt;T&gt;(target: T, keyName?: string, prevIndex?: number): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>keyName</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>prevIndex</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_generateNamespace2_function_1_" data-uid="@yuyi919/utils!generateNamespace2:function(1)">generateNamespace2(target, keyName, extendsIndex)</h4>
  <div class="markdown level1 summary"><p>生成实例的内部实现细节存储空间(namespace)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function generateNamespace2&lt;T&gt;(target: T, keyName?: string, extendsIndex?: number): string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>keyName</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>extendsIndex</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getAge_function_1_" data-uid="@yuyi919/utils!getAge:function(1)">getAge(birthday, offset)</h4>
  <div class="markdown level1 summary"><p>比较生日和当前日期取得年龄</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getAge(birthday: TDate, offset?: number): number;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TDate</span></td>
        <td><em>birthday</em></td>
        <td>
          <p>生日</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>offset</em></td>
        <td>
          <p>偏移量</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getAge_function_2_" data-uid="@yuyi919/utils!getAge:function(2)">getAge(birthday, current)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getAge(birthday: TDate, current: TDate): number;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TDate</span></td>
        <td><em>birthday</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TDate</span></td>
        <td><em>current</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getCodeListByKey_function_1_" data-uid="@yuyi919/utils!getCodeListByKey:function(1)">getCodeListByKey(codeType)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getCodeListByKey(codeType: Option[]): RemoteSearcher;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Option</span>[]</td>
        <td><em>codeType</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">RemoteSearcher</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getCodeListByKey_function_2_" data-uid="@yuyi919/utils!getCodeListByKey:function(2)">getCodeListByKey(codeType, optionFactory)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getCodeListByKey(codeType: OptionSearcher, optionFactory?: ArrayIterator&lt;IKeyValueMap_2, Option&gt;): RemoteSearcher;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">OptionSearcher</span></td>
        <td><em>codeType</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">ArrayIterator</span>&lt;<span class="xref">IKeyValueMap_2</span>, <span class="xref">Option</span>&gt;</td>
        <td><em>optionFactory</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">RemoteSearcher</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getConstructor_function_1_" data-uid="@yuyi919/utils!getConstructor:function(1)">getConstructor(Target)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getConstructor&lt;T extends Function = any&gt;(Target: T): PropertyDescriptor;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>Target</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">PropertyDescriptor</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getDateRange_function_1_" data-uid="@yuyi919/utils!getDateRange:function(1)">getDateRange(days, end)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getDateRange(days: number, end?: Date): Date[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>days</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Date</span></td>
        <td><em>end</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Date</span>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getDay_function_1_" data-uid="@yuyi919/utils!getDay:function(1)">getDay(format)</h4>
  <div class="markdown level1 summary"><p>取得日期</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getDay(format?: DateFormatter | boolean): TMoment;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">DateFormatter</span> | boolean</td>
        <td><em>format</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TMoment</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getDay_function_2_" data-uid="@yuyi919/utils!getDay:function(2)">getDay(offset, format)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getDay(offset: number, format?: false): TMoment;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>offset</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">false</span></td>
        <td><em>format</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TMoment</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getDay_function_3_" data-uid="@yuyi919/utils!getDay:function(3)">getDay(offset, format)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getDay(offset: number, format?: true | DateFormatter): string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>offset</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td>true | <span class="xref">DateFormatter</span></td>
        <td><em>format</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getFuture_function_1_" data-uid="@yuyi919/utils!getFuture:function(1)">getFuture(offset)</h4>
  <div class="markdown level1 summary"><p>返回明天</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getFuture(offset?: number): moment.Dayjs;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>offset</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">moment.Dayjs</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getItemContainer_function_1_" data-uid="@yuyi919/utils!getItemContainer:function(1)">getItemContainer(item, defaultContainer, appendKeys)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getItemContainer(item: Partial&lt;IItemConfig&gt;, defaultContainer: ICommonFormContainer, ...appendKeys: string[]): ICommonFormContainerTarget &amp; {
    [key: string]: any;
};</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Partial</span>&lt;<span class="xref">IItemConfig</span>&gt;</td>
        <td><em>item</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">ICommonFormContainer</span></td>
        <td><em>defaultContainer</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string[]</span></td>
        <td><em>appendKeys</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">ICommonFormContainerTarget</span> &amp; {
    [key: string]: any;
}</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getListDifferent_function_1_" data-uid="@yuyi919/utils!getListDifferent:function(1)">getListDifferent(listA, listB, deep)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getListDifferent(listA: any[], listB: any[], deep?: boolean): {
    push: any[];
    pull: any[];
};</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>listA</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>listB</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>deep</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">{
    push: any[];
    pull: any[];
}</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getOptions_function_1_" data-uid="@yuyi919/utils!getOptions:function(1)">getOptions(optionList, searchKey, keyMatcherFunc, findOne)</h4>
  <div class="markdown level1 summary"><p>使用关键字从optionList中获取匹配的option</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getOptions&lt;TOption extends Option = Option, FindOne extends boolean = false, TResult = IsTrue&lt;FindOne, TOption | undefined, TOption[]&gt;&gt;(optionList: TOption[], searchKey: SearchKey&lt;any&gt;, keyMatcherFunc: KeyMatcherFunc, findOne?: FindOne): TResult;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TOption[]</span></td>
        <td><em>optionList</em></td>
        <td>
          <p>待搜索的Options数组</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;any&gt;</td>
        <td><em>searchKey</em></td>
        <td>
          <p>查找关键字</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">KeyMatcherFunc</span></td>
        <td><em>keyMatcherFunc</em></td>
        <td>
          <p>匹配器</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">FindOne</span></td>
        <td><em>findOne</em></td>
        <td>
          <p>是否只返回第一个（默认为返回数组）</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TResult</span></td>
        <td><p>返回匹配的Option</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>TOption</em></td>
        <td><p>Option对象类型</p>
</td>
      </tr>
      <tr>
        <td><em>FindOne</em></td>
        <td><p>Option关键标识符</p>
</td>
      </tr>
      <tr>
        <td><em>TResult</em></td>
        <td><p>匹配结果</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_getOptions_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>相关api： <a class="xref" href="utils.html#_yuyi919_utils_getOptions_function_1_">getOptions()</a></p>
</div>
  
  
  <h4 id="_yuyi919_utils_getOptionsByKey_function_1_" data-uid="@yuyi919/utils!getOptionsByKey:function(1)">getOptionsByKey(optionList, searchKey, findOne)</h4>
  <div class="markdown level1 summary"><p>通过Label或Value从optionList中获取匹配的option</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getOptionsByKey&lt;T extends Option, K = string&gt;(optionList: T[], searchKey: SearchKey&lt;K&gt;, findOne?: boolean): T | T[] | undefined;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><em>optionList</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;K&gt;</td>
        <td><em>searchKey</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>findOne</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T | T[] | undefined</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getOptionsByLabel_function_1_" data-uid="@yuyi919/utils!getOptionsByLabel:function(1)">getOptionsByLabel(optionList, searchName)</h4>
  <div class="markdown level1 summary"><p>使用关键字从optionList中获取匹配的option</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getOptionsByLabel&lt;T = Option, K = string&gt;(optionList: T[], searchName: SearchKey&lt;K&gt;): T[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><em>optionList</em></td>
        <td>
          <p>待搜索的Options数组</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;K&gt;</td>
        <td><em>searchName</em></td>
        <td>
          <p>label关键字</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><p>返回匹配的Option</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td><p>Option对象类型</p>
</td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td><p>Option关键标识符</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_getOptionsByLabel_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>相关api： <a class="xref" href="utils.html#_yuyi919_utils_getOptions_function_1_">getOptions()</a></p>
</div>
  
  
  <h4 id="_yuyi919_utils_getOptionsByLabel_function_2_" data-uid="@yuyi919/utils!getOptionsByLabel:function(2)">getOptionsByLabel(optionList, searchName, findOne)</h4>
  <div class="markdown level1 summary"><p>使用关键字从optionList中获取匹配的option</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getOptionsByLabel&lt;T = Option, K = string&gt;(optionList: T[], searchName: SearchKey&lt;K&gt;, findOne: true): T | undefined;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><em>optionList</em></td>
        <td>
          <p>待搜索的Options数组</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;K&gt;</td>
        <td><em>searchName</em></td>
        <td>
          <p>label关键字</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">true</span></td>
        <td><em>findOne</em></td>
        <td>
          <p>是否只返回第一个（默认为返回数组）</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T | undefined</span></td>
        <td><p>返回匹配的Option</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td><p>Option对象类型</p>
</td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td><p>Option关键标识符</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_getOptionsByLabel_function_2__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>相关api： <a class="xref" href="utils.html#_yuyi919_utils_getOptions_function_1_">getOptions()</a></p>
</div>
  
  
  <h4 id="_yuyi919_utils_getOptionsByValue_function_1_" data-uid="@yuyi919/utils!getOptionsByValue:function(1)">getOptionsByValue(optionList, searchValue)</h4>
  <div class="markdown level1 summary"><p>使用关键字从optionList中获取匹配的option</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getOptionsByValue&lt;T = Option, K = string&gt;(optionList: T[], searchValue: SearchKey&lt;K&gt;): T[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><em>optionList</em></td>
        <td>
          <p>待搜索的Options数组</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;K&gt;</td>
        <td><em>searchValue</em></td>
        <td>
          <p>value关键字</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><p>返回匹配的Option</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td><p>Option对象类型</p>
</td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td><p>Option关键标识符</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_getOptionsByValue_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>相关api： <a class="xref" href="utils.html#_yuyi919_utils_getOptions_function_1_">getOptions()</a></p>
</div>
  
  
  <h4 id="_yuyi919_utils_getOptionsByValue_function_2_" data-uid="@yuyi919/utils!getOptionsByValue:function(2)">getOptionsByValue(optionList, searchValue, findOne)</h4>
  <div class="markdown level1 summary"><p>使用关键字从optionList中获取匹配的option</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getOptionsByValue&lt;T = Option, K = string&gt;(optionList: T[], searchValue: SearchKey&lt;K&gt;, findOne: true): T | undefined;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><em>optionList</em></td>
        <td>
          <p>待搜索的Options数组</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;K&gt;</td>
        <td><em>searchValue</em></td>
        <td>
          <p>value关键字</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">true</span></td>
        <td><em>findOne</em></td>
        <td>
          <p>是否只返回第一个（默认为返回数组）</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T | undefined</span></td>
        <td><p>返回匹配的Option</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td><p>Option对象类型</p>
</td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td><p>Option关键标识符</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_getOptionsByValue_function_2__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>相关api： <a class="xref" href="utils.html#_yuyi919_utils_getOptions_function_1_">getOptions()</a></p>
</div>
  
  
  <h4 id="_yuyi919_utils_getOptionsSelectedMatch_function_1_" data-uid="@yuyi919/utils!getOptionsSelectedMatch:function(1)">getOptionsSelectedMatch(option, searchName)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getOptionsSelectedMatch&lt;T, K&gt;(option: T[], searchName: SearchKey&lt;K&gt;): KeywordMatcher;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><em>option</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;K&gt;</td>
        <td><em>searchName</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">KeywordMatcher</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getPropByPath_function_1_" data-uid="@yuyi919/utils!getPropByPath:function(1)">getPropByPath(obj, path, strict)</h4>
  <div class="markdown level1 summary"><p>根据 object对象的path路径获取值。 Gets the property value at path of <code>object</code><!-- -->.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getPropByPath&lt;Target = any, ExpectValue = any, DeepTarget = Target&gt;(obj: Target, path: string, strict?: boolean): IGetPathResult&lt;ExpectValue, DeepTarget&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Target</span></td>
        <td><em>obj</em></td>
        <td>
          <p>要检索的<code>对象</code><!-- -->。 The <code>object</code> to query.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>path</em></td>
        <td>
          <p>要获取属性的<code>路径</code><!-- -->。 The <code>path</code> of the property to get.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>strict</em></td>
        <td>
          <p>是否严格模式，obj解析出错时弹出错误</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IGetPathResult</span>&lt;ExpectValue, DeepTarget&gt;</td>
        <td><p>返回解析结果。 Returns the resolved value.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>Target</em></td>
        <td><p>解析对象</p>
</td>
      </tr>
      <tr>
        <td><em>ExpectValue</em></td>
        <td><p>预期值</p>
</td>
      </tr>
      <tr>
        <td><em>DeepTarget</em></td>
        <td><p>路径最深处的对象（只有一层的话就是解析对象自己）</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getPropByPath2_function_1_" data-uid="@yuyi919/utils!getPropByPath2:function(1)">getPropByPath2(obj, path, strict)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getPropByPath2&lt;Target = any, ExpectValue = any, DeepTarget = Target&gt;(obj: Target, path: string, strict?: boolean): IGetPathResult&lt;ExpectValue, DeepTarget&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Target</span></td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>path</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>strict</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IGetPathResult</span>&lt;ExpectValue, DeepTarget&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>Target</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>ExpectValue</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>DeepTarget</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getRealLength_function_1_" data-uid="@yuyi919/utils!getRealLength:function(1)">getRealLength(str)</h4>
  <div class="markdown level1 summary"><p>获得字符串实际长度，中文占2，英文占1</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getRealLength(str: string): number;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>str</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getSafeMapOptions_function_1_" data-uid="@yuyi919/utils!getSafeMapOptions:function(1)">getSafeMapOptions(options, defaultValue)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getSafeMapOptions(options?: string[] | IKeyValueMap&lt;boolean&gt;, defaultValue?: IKeyValueMap&lt;boolean&gt;): IKeyValueMap&lt;boolean&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>string[] | <span class="xref">IKeyValueMap</span>&lt;boolean&gt;</td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">IKeyValueMap</span>&lt;boolean&gt;</td>
        <td><em>defaultValue</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IKeyValueMap</span>&lt;boolean&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getTime_function_1_" data-uid="@yuyi919/utils!getTime:function(1)">getTime()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getTime(): number;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getTimeProfile_function_1_" data-uid="@yuyi919/utils!getTimeProfile:function(1)">getTimeProfile()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getTimeProfile(): number;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getType_function_1_" data-uid="@yuyi919/utils!getType:function(1)">getType(v)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getType(v: any): Type;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>v</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getValueAndPath_function_1_" data-uid="@yuyi919/utils!getValueAndPath:function(1)">getValueAndPath(values, options)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getValueAndPath(values: any, options?: ValuePathIteratorOptions): [string, any][];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>values</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">ValuePathIteratorOptions</span></td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">[string, any][]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getValueAndPath_function_2_" data-uid="@yuyi919/utils!getValueAndPath:function(2)">getValueAndPath(values, allowPath)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getValueAndPath(values: any, allowPath?: AllowPath): [string, any][];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>values</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">AllowPath</span></td>
        <td><em>allowPath</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">[string, any][]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getValuePath_function_1_" data-uid="@yuyi919/utils!getValuePath:function(1)">getValuePath(values, options)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getValuePath(values: any, options?: ValuePathIteratorOptions): string[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>values</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">ValuePathIteratorOptions</span></td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getValuePath_function_2_" data-uid="@yuyi919/utils!getValuePath:function(2)">getValuePath(values, allowPath)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getValuePath(values: any, allowPath?: AllowPath): string[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>values</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">AllowPath</span></td>
        <td><em>allowPath</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getValuePathIterator_function_1_" data-uid="@yuyi919/utils!getValuePathIterator:function(1)">getValuePathIterator(values, options)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getValuePathIterator(values: any, options?: ValuePathIteratorOptions): Generator&lt;[string, any]&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>values</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">ValuePathIteratorOptions</span></td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Generator</span>&lt;[string, any]&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getValuePathIterator_function_2_" data-uid="@yuyi919/utils!getValuePathIterator:function(2)">getValuePathIterator(values, allowPath)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getValuePathIterator(values: any, allowPath?: AllowPath): Generator&lt;[string, any]&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>values</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">AllowPath</span></td>
        <td><em>allowPath</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Generator</span>&lt;[string, any]&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getValuePathIteratorRunner_function_1_" data-uid="@yuyi919/utils!getValuePathIteratorRunner:function(1)">getValuePathIteratorRunner(values, allowPath, parentKey)</h4>
  <div class="markdown level1 summary"><p>迭代器(递归版本)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getValuePathIteratorRunner(values: any, allowPath?: string[] | {
    [path: string]: boolean;
}, parentKey?: string): Generator&lt;[string, any], void, [string, any]&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>values</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string[] | {
    [path: string]: boolean;
}</span></td>
        <td><em>allowPath</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>parentKey</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Generator</span>&lt;[string, any], void, [string, any]&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_getYesterday_function_1_" data-uid="@yuyi919/utils!getYesterday:function(1)">getYesterday(offset, format)</h4>
  <div class="markdown level1 summary"><p>返回昨天</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function getYesterday(offset?: number, format?: boolean | DateFormatter): moment.Dayjs;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>offset</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td>boolean | <span class="xref">DateFormatter</span></td>
        <td><em>format</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">moment.Dayjs</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_hackConstructor_function_1_" data-uid="@yuyi919/utils!hackConstructor:function(1)">hackConstructor(Target, hack, prefix)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function hackConstructor&lt;T extends Function, Args extends any[]&gt;(Target: T, hack: (args: Args, HackedTarget: T, instance: any) =&gt; Args, prefix?: string): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>Target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(args: Args, HackedTarget: T, instance: any) =&gt; Args</span></td>
        <td><em>hack</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>prefix</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Args</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_hoursDiff_function_1_" data-uid="@yuyi919/utils!hoursDiff:function(1)">hoursDiff(targetDate, currentDate)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function hoursDiff(targetDate: TDate, currentDate?: TDate): number;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TDate</span></td>
        <td><em>targetDate</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TDate</span></td>
        <td><em>currentDate</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_injectNamespace_function_1_" data-uid="@yuyi919/utils!injectNamespace:function(1)">injectNamespace(target, keyName, initialValue, options)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function injectNamespace&lt;T, VT = any&gt;(target: T, keyName: string, initialValue?: VT | ((...args: any[]) =&gt; VT), options?: InjectNamespaceOptions): TypedPropertyDescriptor&lt;VT&gt; &amp; {
    generedKey: string;
};</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>keyName</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">VT | ((...args: any[]) =&gt; VT)</span></td>
        <td><em>initialValue</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">InjectNamespaceOptions</span></td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TypedPropertyDescriptor</span>&lt;VT&gt; &amp; {
    generedKey: string;
}</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>VT</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isBoolOrNum_function_1_" data-uid="@yuyi919/utils!isBoolOrNum:function(1)">isBoolOrNum(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isBoolOrNum(value: any): value is (boolean | number);</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is (boolean | number)</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isEmptyArray_function_1_" data-uid="@yuyi919/utils!isEmptyArray:function(1)">isEmptyArray(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isEmptyArray&lt;T&gt;(value: any): value is T[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is T[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isEmptyArrayStrict_function_1_" data-uid="@yuyi919/utils!isEmptyArrayStrict:function(1)">isEmptyArrayStrict(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isEmptyArrayStrict(value: any): value is any[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is any[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isEmptyData_function_1_" data-uid="@yuyi919/utils!isEmptyData:function(1)">isEmptyData(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isEmptyData(value: any): value is any[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is any[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isEmptyObject_function_1_" data-uid="@yuyi919/utils!isEmptyObject:function(1)">isEmptyObject(value, checkValue)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isEmptyObject(value: any, checkValue?: boolean): value is {};</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>checkValue</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is {}</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isEmptyValue_function_1_" data-uid="@yuyi919/utils!isEmptyValue:function(1)">isEmptyValue(value)</h4>
  <div class="markdown level1 summary"><p>是否为空或异常值，不包括0 空值: null/undefined/'' 异常值: NaN 不包括空对象/空数组</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isEmptyValue(value: any): value is (null | undefined | '');</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is (null | undefined | &#39;&#39;)</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isEqual_function_1_" data-uid="@yuyi919/utils!isEqual:function(1)">isEqual(value, other, noStrict)</h4>
  <div class="markdown level1 summary"><p>深比较两个值是否相等</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isEqual(value: any, other: any, noStrict?: boolean): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          <p>比较值</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>other</em></td>
        <td>
          <p>另一个值</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>noStrict</em></td>
        <td>
          <p>启用非严格模式(默认为false)，null和undefined视为相等</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><p>如果两个值完全相同，那么返回true，否则返回false。</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_isEqual_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>\ NOTE: # **注意**. 这个方法支持比较 arrays, array buffers, booleans, date objects, error objects, maps, numbers, Object objects, regexes, sets, strings, symbols, 以及 typed arrays. Object 对象值比较自身的属性，不包括继承的和可枚举的属性。 不支持函数和DOM节点比较。</p>
</div>
  
  
  <h4 id="_yuyi919_utils_isFunction_function_1_" data-uid="@yuyi919/utils!isFunction:function(1)">isFunction(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isFunction&lt;T extends ((...args: any[]) =&gt; any)&gt;(value: any): value is T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is T</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isLabelMatchedItem_function_1_" data-uid="@yuyi919/utils!isLabelMatchedItem:function(1)">isLabelMatchedItem(labelSearcher, item)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isLabelMatchedItem&lt;V extends string, D extends string&gt;(labelSearcher: SearchKey&lt;string&gt;, item: Option&lt;V, D&gt;): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;string&gt;</td>
        <td><em>labelSearcher</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Option</span>&lt;V, D&gt;</td>
        <td><em>item</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>V</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>D</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isLabelMatchedItemByMatcher_function_1_" data-uid="@yuyi919/utils!isLabelMatchedItemByMatcher:function(1)">isLabelMatchedItemByMatcher(keyMatcher, item)</h4>
  <div class="markdown level1 summary"><p>ttttttt</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isLabelMatchedItemByMatcher(keyMatcher: KeywordMatcher, item: Option): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">KeywordMatcher</span></td>
        <td><em>keyMatcher</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Option</span></td>
        <td><em>item</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNaN_function_1_" data-uid="@yuyi919/utils!isNaN:function(1)">isNaN(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNaN(value: any): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNilAll_function_1_" data-uid="@yuyi919/utils!isNilAll:function(1)">isNilAll(valueArr)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNilAll(...valueArr: any[]): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>valueArr</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNotEmptyArray_function_1_" data-uid="@yuyi919/utils!isNotEmptyArray:function(1)">isNotEmptyArray(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNotEmptyArray&lt;T&gt;(value: any): value is T[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is T[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNotEmptyArrayStrict_function_1_" data-uid="@yuyi919/utils!isNotEmptyArrayStrict:function(1)">isNotEmptyArrayStrict(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNotEmptyArrayStrict(value: any): value is any[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is any[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNotEmptyData_function_1_" data-uid="@yuyi919/utils!isNotEmptyData:function(1)">isNotEmptyData(value)</h4>
  <div class="markdown level1 summary"><p>不为空的数据</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNotEmptyData(value: any): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNotEmptyObject_function_1_" data-uid="@yuyi919/utils!isNotEmptyObject:function(1)">isNotEmptyObject(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNotEmptyObject(value: any): value is object;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is object</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNotEmptyString_function_1_" data-uid="@yuyi919/utils!isNotEmptyString:function(1)">isNotEmptyString(str)</h4>
  <div class="markdown level1 summary"><p>判断非空字符串</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNotEmptyString(str: any): str is string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>str</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">str</span> is string</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNotEmptyValue_function_1_" data-uid="@yuyi919/utils!isNotEmptyValue:function(1)">isNotEmptyValue(value)</h4>
  <div class="markdown level1 summary"><p>是否非空且非异常值，不包括0 空值: null/undefined/'' 不包括空对象/空数组</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNotEmptyValue(value: any): value is (string | number | boolean | object | Function);</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is (string | number | boolean | object | <span class="xref">Function</span>)</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNotNil_function_1_" data-uid="@yuyi919/utils!isNotNil:function(1)">isNotNil(value)</h4>
  <div class="markdown level1 summary"><p>检查<code>value</code><!-- -->是否为 <code>null</code> 或 <code>undefined</code></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNotNil(value: any): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNum_function_1_" data-uid="@yuyi919/utils!isNum:function(1)">isNum(value, allowNaN)</h4>
  <div class="markdown level1 summary"><p>判断一个值是否为数字</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNum(value: any, allowNaN?: true): value is number;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">true</span></td>
        <td><em>allowNaN</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is number</td>
        <td><p>— 返回true/false</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNumber_function_1_" data-uid="@yuyi919/utils!isNumber:function(1)">isNumber(value, allowNaN)</h4>
  <div class="markdown level1 summary"><p>判断一个值是否为数字</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNumber(value: any, allowNaN?: true): value is number;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">true</span></td>
        <td><em>allowNaN</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is number</td>
        <td><p>— 返回true/false</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isNumStrict_function_1_" data-uid="@yuyi919/utils!isNumStrict:function(1)">isNumStrict(value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isNumStrict(value: any): value is number;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">value</span> is number</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isOptionsItemSelected_function_1_" data-uid="@yuyi919/utils!isOptionsItemSelected:function(1)">isOptionsItemSelected(option, searchName, selectedValue)</h4>
  <div class="markdown level1 summary"><p>判断是否选择项</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isOptionsItemSelected&lt;T, K&gt;(option: T[], searchName: SearchKey&lt;K&gt;, selectedValue: SearchKey&lt;K&gt;): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td><em>option</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;K&gt;</td>
        <td><em>searchName</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;K&gt;</td>
        <td><em>selectedValue</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isPureObj_function_1_" data-uid="@yuyi919/utils!isPureObj:function(1)">isPureObj(target)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isPureObj&lt;T = object&gt;(target: any): target is T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">target</span> is T</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isValueMatchedItem_function_1_" data-uid="@yuyi919/utils!isValueMatchedItem:function(1)">isValueMatchedItem(valueSearcher, item)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isValueMatchedItem(valueSearcher: SearchKey&lt;string&gt;, item: Option): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;string&gt;</td>
        <td><em>valueSearcher</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Option</span></td>
        <td><em>item</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_isValueMatchedItemByMatcher_function_1_" data-uid="@yuyi919/utils!isValueMatchedItemByMatcher:function(1)">isValueMatchedItemByMatcher(keyMatcher, item)</h4>
  <div class="markdown level1 summary"><p>ttttttt</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function isValueMatchedItemByMatcher(keyMatcher: KeywordMatcher, item: Option): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">KeywordMatcher</span></td>
        <td><em>keyMatcher</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Option</span></td>
        <td><em>item</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_jsxIf_function_1_" data-uid="@yuyi919/utils!jsxIf:function(1)">jsxIf(bool, when, elseValue)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function jsxIf(bool: any, when: any, elseValue?: any): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>bool</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>when</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>elseValue</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_labelsToValues_function_1_" data-uid="@yuyi919/utils!labelsToValues:function(1)">labelsToValues(options, label)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function labelsToValues(options: Option[], label: SearchKey&lt;string&gt;): string[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Option</span>[]</td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;string&gt;</td>
        <td><em>label</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_labelsToValues_function_2_" data-uid="@yuyi919/utils!labelsToValues:function(2)">labelsToValues(options, label, joinKey)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function labelsToValues(options: Option[], label: SearchKey&lt;string&gt;, joinKey: string): string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Option</span>[]</td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;string&gt;</td>
        <td><em>label</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>joinKey</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_labelToValue_function_1_" data-uid="@yuyi919/utils!labelToValue:function(1)">labelToValue(optionList, label)</h4>
  <div class="markdown level1 summary"><p>转换value为label</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function labelToValue(optionList: Option[], label: SearchKey&lt;string&gt;): string | undefined;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Option</span>[]</td>
        <td><em>optionList</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;string&gt;</td>
        <td><em>label</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string | undefined</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_likeArray_function_1_" data-uid="@yuyi919/utils!likeArray:function(1)">likeArray(target, other)</h4>
  <div class="markdown level1 summary"><p>判断两个数组是否相似</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function likeArray(target: any[], other: any[]): boolean;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>target</em></td>
        <td>
          <p>原数组</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>other</em></td>
        <td>
          <p>比较数组</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_likeArray_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p># **注意** 该方法的比较是相似而非相等</p>
</div>
  
  
  <h4 id="_yuyi919_utils_logger_function_1_" data-uid="@yuyi919/utils!logger:function(1)">logger(name, time)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function logger&lt;P extends any = any&gt;(name?: string, time?: boolean): (target: any, methodName: string, descriptor: PropertyDescriptor) =&gt; void;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>name</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>time</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>(target: any, methodName: string, descriptor: <span class="xref">PropertyDescriptor</span>) =&gt; void</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>P</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_mapToKeyValues_function_1_" data-uid="@yuyi919/utils!mapToKeyValues:function(1)">mapToKeyValues(array, key)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function mapToKeyValues(array: any[], key: any): any[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>array</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>key</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_mergeFuncPipe_function_1_" data-uid="@yuyi919/utils!mergeFuncPipe:function(1)">mergeFuncPipe(funcA, funcB)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function mergeFuncPipe(funcA: any, funcB: any): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>funcA</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>funcB</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_modelValidator_function_1_" data-uid="@yuyi919/utils!modelValidator:function(1)">modelValidator(fieldName, validator)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function modelValidator&lt;T&gt;(fieldName: string, validator: RegExp | IFunction | T): (model: T) =&gt; any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>fieldName</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">RegExp</span> | <span class="xref">IFunction</span> | T</td>
        <td><em>validator</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">(model: T) =&gt; any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_MultipleSplit_function_1_" data-uid="@yuyi919/utils!MultipleSplit:function(1)">MultipleSplit(txt, str, index)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function MultipleSplit(txt: string, str: string, index?: number): any[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>txt</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>str</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>index</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_nextTick_function_1_" data-uid="@yuyi919/utils!nextTick:function(1)">nextTick()</h4>
  <div class="markdown level1 summary"><p>等待下一帧cpu时序</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function nextTick(): Promise&lt;void&gt;;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span>&lt;void&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Observable___subscribe___function_1_" data-uid="@yuyi919/utils!Observable$$.subscribe$$:function(1)">Observable$$.subscribe$$(source, observer)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function subscribe$$&lt;T&gt;(source: Observable&lt;T&gt;, observer?: PartialObserver&lt;T&gt;): Subscription_2;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Observable</span>&lt;T&gt;</td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">PartialObserver</span>&lt;T&gt;</td>
        <td><em>observer</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Subscription_2</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Observable___subscribe___function_2_" data-uid="@yuyi919/utils!Observable$$.subscribe$$:function(2)">Observable$$.subscribe$$(source, next, error, complete)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function subscribe$$&lt;T&gt;(source: Observable&lt;T&gt;, next?: (value: T) =&gt; void, error?: (error: any) =&gt; void, complete?: () =&gt; void): Subscription_2;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Observable</span>&lt;T&gt;</td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(value: T) =&gt; void</span></td>
        <td><em>next</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(error: any) =&gt; void</span></td>
        <td><em>error</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">() =&gt; void</span></td>
        <td><em>complete</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Subscription_2</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Observable___unsubscribe___function_1_" data-uid="@yuyi919/utils!Observable$$.unsubscribe$$:function(1)">Observable$$.unsubscribe$$(source)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function unsubscribe$$(source: Subscription_2): void;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Subscription_2</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">void</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_parseTime_function_1_" data-uid="@yuyi919/utils!parseTime:function(1)">parseTime(time, cFormat)</h4>
  <div class="markdown level1 summary"><p>Created by jiachenpan on 16/11/18.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function parseTime(time: any, cFormat?: string): string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>time</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>cFormat</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_patchUpdate_function_1_" data-uid="@yuyi919/utils!patchUpdate:function(1)">patchUpdate(data, next, options)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function patchUpdate&lt;T&gt;(data: T, next: T, options?: PathUpdateOptions): PathUpdateResult&lt;T&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>data</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>next</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">PathUpdateOptions</span></td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">PathUpdateResult</span>&lt;T&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_pathReturn_function_1_" data-uid="@yuyi919/utils!pathReturn:function(1)">pathReturn(instance, params, isConfirm, useBack)</h4>
  <div class="markdown level1 summary"><p>组件返回</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function pathReturn(instance: {
    $router: any;
    $route: any;
}, params: any, isConfirm: boolean, useBack: boolean): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">{
    $router: any;
    $route: any;
}</span></td>
        <td><em>instance</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>params</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isConfirm</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>useBack</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_pipe_function_1_" data-uid="@yuyi919/utils!pipe:function(1)">pipe(initialValue, funcArr)</h4>
  <div class="markdown level1 summary"><p>管道</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function pipe&lt;T, R, F extends ((v: T) =&gt; R)&gt;(initialValue: T, ...funcArr: F[]): R;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>initialValue</em></td>
        <td>
          <p>原始值</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">F[]</span></td>
        <td><em>funcArr</em></td>
        <td>
          <p>函数</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">R</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>R</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>F</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_reactionOnce_function_1_" data-uid="@yuyi919/utils!reactionOnce:function(1)">reactionOnce(expression, match, emitValue)</h4>
  <div class="markdown level1 summary"><p>(mobx)反应式追踪一个值的变化，并在符合要求的情况时注销追踪</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function reactionOnce&lt;T = any&gt;(expression: () =&gt; any, match: (value: any) =&gt; boolean, emitValue?: T): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">() =&gt; any</span></td>
        <td><em>expression</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(value: any) =&gt; boolean</span></td>
        <td><em>match</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>emitValue</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_reduceMap_function_1_" data-uid="@yuyi919/utils!reduceMap:function(1)">reduceMap(collection, callback, accumulator)</h4>
  <div class="markdown level1 summary"><p>近似_.map，callback需返回一个Object，最后将所有返回的Object组合为一个Object</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function reduceMap&lt;T, Result extends IKeyValueMap, TResult = {
    [K in keyof T]?: Result;
}&gt;(collection: List&lt;T&gt; | T[] | null | undefined, callback: ReduceMapObjectIterator&lt;List&lt;T&gt; | T[] | null | undefined, Result, TResult&gt;, accumulator?: TResult): TResult;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">&quot;\&quot;../index\&quot;&quot;.List</span>&lt;T&gt; | T[] | null | undefined</td>
        <td><em>collection</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">ReduceMapObjectIterator</span>&lt;<span class="xref">&quot;\&quot;../index\&quot;&quot;.List</span>&lt;T&gt; | T[] | null | undefined, Result, TResult&gt;</td>
        <td><em>callback</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TResult</span></td>
        <td><em>accumulator</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TResult</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Result</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>TResult</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_reduceMap_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>see: _.map</p>
</div>
  
  
  <h4 id="_yuyi919_utils_reduceMap_function_2_" data-uid="@yuyi919/utils!reduceMap:function(2)">reduceMap(collection, callback, accumulator)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function reduceMap&lt;T extends IKeyValueMap, Result = any, TResult = {
    [K in keyof T]?: Result;
}&gt;(collection: T | null | undefined, callback: ReduceMapObjectIterator&lt;T, Result, TResult&gt;, accumulator?: TResult): TResult;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T | null | undefined</span></td>
        <td><em>collection</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">ReduceMapObjectIterator</span>&lt;T, Result, TResult&gt;</td>
        <td><em>callback</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TResult</span></td>
        <td><em>accumulator</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TResult</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Result</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>TResult</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_reduceMap_function_2__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>see: _.reduce</p>
</div>
  
  
  <h4 id="_yuyi919_utils_searchFormatter_function_1_" data-uid="@yuyi919/utils!searchFormatter:function(1)">searchFormatter(searchTarget, replaceKey, formatter, targetInnerKey)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function searchFormatter&lt;T, Target extends (object | any[]), TargetKey extends string&gt;(searchTarget: Target, replaceKey: string | string[], formatter?: PropFormatter&lt;T&gt;, targetInnerKey?: TargetKey): NativeOrProp&lt;ReturnType&lt;PropFormatter&lt;T&gt;&gt;, TargetKey&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Target</span></td>
        <td><em>searchTarget</em></td>
        <td>
          <p>检索对象</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string | string[]</span></td>
        <td><em>replaceKey</em></td>
        <td>
          <p>检索来源，优先级为前<!-- -->&gt;<!-- -->后</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">PropFormatter</span>&lt;T&gt;</td>
        <td><em>formatter</em></td>
        <td>
          <p>格式化方法</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TargetKey</span></td>
        <td><em>targetInnerKey</em></td>
        <td>
          <p>嵌入检索对象指定的Key</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">NativeOrProp</span>&lt;<span class="xref">ReturnType</span>&lt;<span class="xref">PropFormatter</span>&lt;T&gt;&gt;, TargetKey&gt;</td>
        <td><p>返回由检索而来的值聚合而成的格式化后的值，指定[targetKey]时返回检索对象</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Target</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>TargetKey</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Setter_setTrue___function_1_" data-uid="@yuyi919/utils!Setter.setTrue$$:function(1)">Setter.setTrue$$(o, key)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function setTrue$$&lt;T&gt;(o: T, key: TKey): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>o</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TKey</span></td>
        <td><em>key</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Setter_setValue___function_1_" data-uid="@yuyi919/utils!Setter.setValue$$:function(1)">Setter.setValue$$(o, key, value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function setValue$$&lt;T&gt;(o: T, key: TKey, value: any): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>o</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TKey</span></td>
        <td><em>key</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Setter_setWith___function_1_" data-uid="@yuyi919/utils!Setter.setWith$$:function(1)">Setter.setWith$$(target, source, keywordKey, keywordVal)</h4>
  <div class="markdown level1 summary"><p>设置目标map或对象属性并返回目标自身</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function setWith$$&lt;T extends {} | Map&lt;any, any&gt;&gt;(target: T, source: any, keywordKey: TKey, keywordVal: TKey): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TKey</span></td>
        <td><em>keywordKey</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TKey</span></td>
        <td><em>keywordVal</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Setter_setWithEntries___function_1_" data-uid="@yuyi919/utils!Setter.setWithEntries$$:function(1)">Setter.setWithEntries$$(o, option)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function setWithEntries$$&lt;T&gt;(o: T, option: [string, string]): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>o</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">[string, string]</span></td>
        <td><em>option</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Setter_setWithEntriesReverse___function_1_" data-uid="@yuyi919/utils!Setter.setWithEntriesReverse$$:function(1)">Setter.setWithEntriesReverse$$(o, option)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function setWithEntriesReverse$$&lt;T, K extends string, V extends string&gt;(o: T, option: [K, V]): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>o</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">[K, V]</span></td>
        <td><em>option</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>V</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Setter_setWithKeyValue___function_1_" data-uid="@yuyi919/utils!Setter.setWithKeyValue$$:function(1)">Setter.setWithKeyValue$$(target, source)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function setWithKeyValue$$&lt;T&gt;(target: T, source: {
        key: any;
        value: any;
    }): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">{
        key: any;
        value: any;
    }</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Setter_setWithLabelValue___function_1_" data-uid="@yuyi919/utils!Setter.setWithLabelValue$$:function(1)">Setter.setWithLabelValue$$(target, source)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function setWithLabelValue$$&lt;T&gt;(target: T, source: {
        label: string;
        value: any;
    }): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">{
        label: string;
        value: any;
    }</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Setter_setWithValueLabel___function_1_" data-uid="@yuyi919/utils!Setter.setWithValueLabel$$:function(1)">Setter.setWithValueLabel$$(target, source)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export function setWithValueLabel$$&lt;T&gt;(target: T, source: {
        label: any;
        value: any;
    }): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">{
        label: any;
        value: any;
    }</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_shiftKeyGroup_function_1_" data-uid="@yuyi919/utils!shiftKeyGroup:function(1)">shiftKeyGroup(obj, shiftKeysMap, shiftMode)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function shiftKeyGroup&lt;T, K extends keyof T, Map extends Record&lt;K, K | string&gt;&gt;(obj: Record&lt;string | number | K, any&gt;, shiftKeysMap: Partial&lt;Map&gt;, shiftMode?: ShiftMode): Record&lt;K, any&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Record</span>&lt;string | number | K, any&gt;</td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Partial</span>&lt;Map&gt;</td>
        <td><em>shiftKeysMap</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">ShiftMode</span></td>
        <td><em>shiftMode</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Record</span>&lt;K, any&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Map</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_shiftKeyGroup_function_2_" data-uid="@yuyi919/utils!shiftKeyGroup:function(2)">shiftKeyGroup(obj, shiftKeysMap, shifter)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function shiftKeyGroup&lt;T extends Record&lt;any, any&gt;, K extends keyof T, Map = Record&lt;string | number | K, string | number | K&gt;&gt;(obj: any, shiftKeysMap: Map, shifter: (key: string, map: Map) =&gt; string | false | void | undefined | null): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>obj</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Map</span></td>
        <td><em>shiftKeysMap</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(key: string, map: Map) =&gt; string | false | void | undefined | null</span></td>
        <td><em>shifter</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Map</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_simpleTimeBuffer_function_1_" data-uid="@yuyi919/utils!simpleTimeBuffer:function(1)">simpleTimeBuffer(time, isDeepDiff, callback, emitter)</h4>
  <div class="markdown level1 summary"><p>创建一个简单的时间缓冲Promise</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function simpleTimeBuffer&lt;V = any&gt;(time: number, isDeepDiff: boolean, callback: CallbackFunction&lt;V&gt;, emitter?: EventEmitter&lt;V&gt;): TimeBufferConfig&lt;V&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>time</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isDeepDiff</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">CallbackFunction</span>&lt;V&gt;</td>
        <td><em>callback</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">EventEmitter</span>&lt;V&gt;</td>
        <td><em>emitter</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">TimeBufferConfig</span>&lt;V&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>V</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_simpleTimeBufferInput_function_1_" data-uid="@yuyi919/utils!simpleTimeBufferInput:function(1)">simpleTimeBufferInput(key, value, callback, time, isDeepDiff)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function simpleTimeBufferInput&lt;K extends object, V = any&gt;(key: K, value: V, callback: CallbackFunction&lt;V&gt;, time: number, isDeepDiff?: boolean): Promise&lt;any&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">K</span></td>
        <td><em>key</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">V</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">CallbackFunction</span>&lt;V&gt;</td>
        <td><em>callback</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>time</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isDeepDiff</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span>&lt;any&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>K</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>V</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_sleep_function_1_" data-uid="@yuyi919/utils!sleep:function(1)">sleep(time, emitValue, isError)</h4>
  <div class="markdown level1 summary"><p>异步等候</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function sleep&lt;V = void&gt;(time: number, emitValue?: V, isError?: boolean): Promise&lt;V&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">number</span></td>
        <td><em>time</em></td>
        <td>
          <p>等候时间</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">V</span></td>
        <td><em>emitValue</em></td>
        <td>
          <p>默认不需要</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isError</em></td>
        <td>
          <p>是否以reject</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span>&lt;V&gt;</td>
        <td><p>返回Promise<emitvalue><p>
</emitvalue></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>V</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_stubFunction_function_1_" data-uid="@yuyi919/utils!stubFunction:function(1)">stubFunction(args)</h4>
  <div class="markdown level1 summary"><p>一个静态函数</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function stubFunction(...args: any[]): undefined;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>args</em></td>
        <td>
          <p>任意参数</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">undefined</span></td>
        <td><p>什么都不会返回</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_stubObjectReturn_function_1_" data-uid="@yuyi919/utils!stubObjectReturn:function(1)">stubObjectReturn(arg, args)</h4>
  <div class="markdown level1 summary"><p>一个只有返回功能的静态函数</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function stubObjectReturn&lt;T&gt;(arg?: T, ...args: any[]): T extends object ? T : {};</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>arg</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>args</em></td>
        <td>
          <p>任意参数</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T extends object ? T : {}</span></td>
        <td><p>传入对象返回直接，如果不是对象或者什么都没传则返回空对象</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_stubObjectStatic_function_1_" data-uid="@yuyi919/utils!stubObjectStatic:function(1)">stubObjectStatic(args)</h4>
  <div class="markdown level1 summary"><p>一个静态函数，返回一个对象</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function stubObjectStatic(...args: any[]): typeof Constant$.EMPTY_OBJECT;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>args</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>typeof <span class="xref">Constant$.EMPTY_OBJECT</span></td>
        <td><p>一个静态的空对象，多次调用也永远指向同一个内存地址</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_stubReturn_function_1_" data-uid="@yuyi919/utils!stubReturn:function(1)">stubReturn(arg, args)</h4>
  <div class="markdown level1 summary"><p>一个只有返回功能的静态函数</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function stubReturn&lt;T&gt;(arg?: T, ...args: any[]): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>arg</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>args</em></td>
        <td>
          <p>任意参数</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><p>传入什么返回什么，如果什么都没传则返回自身</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_stubReturn_function_2_" data-uid="@yuyi919/utils!stubReturn:function(2)">stubReturn()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function stubReturn(): typeof stubReturn;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>typeof <span class="xref">stubReturn</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_stubReturn2nd_function_1_" data-uid="@yuyi919/utils!stubReturn2nd:function(1)">stubReturn2nd(arg1, arg2, args)</h4>
  <div class="markdown level1 summary"><p>一个只有返回功能的静态函数</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function stubReturn2nd&lt;T&gt;(arg1?: any, arg2?: T, ...args: any[]): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>arg1</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>arg2</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>args</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><p>第二个传入什么返回什么</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_stubReturnArgs_function_1_" data-uid="@yuyi919/utils!stubReturnArgs:function(1)">stubReturnArgs(args)</h4>
  <div class="markdown level1 summary"><p>一个只有返回功能的静态函数</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function stubReturnArgs&lt;T extends any[]&gt;(...args: T): T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><em>args</em></td>
        <td>
          <p>任意参数</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td><p>传入收集起来的参数</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_timeProfile_function_1_" data-uid="@yuyi919/utils!timeProfile:function(1)">timeProfile()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function timeProfile(): void;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">void</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_toDateString_function_1_" data-uid="@yuyi919/utils!toDateString:function(1)">toDateString(value, formatter)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function toDateString(value: any, formatter?: EDateFormatter): string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">EDateFormatter</span></td>
        <td><em>formatter</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_trackMerge_function_1_" data-uid="@yuyi919/utils!trackMerge:function(1)">trackMerge(object, source, options)</h4>
  <div class="markdown level1 summary"><p>栈合并</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function trackMerge&lt;Target, Source&gt;(object: Target, source: Source, options?: TrackMergeOptions): Partial&lt;Target &amp; Source&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Target</span></td>
        <td><em>object</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Source</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">TrackMergeOptions</span></td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Partial</span>&lt;Target &amp; Source&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>Target</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Source</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_trackMerge_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>实现细节见: <a href="https://www.lodashjs.com/docs/latest#_mergewithobject-sources-customizer">https://www.lodashjs.com/docs/latest#_mergewithobject-sources-customizer</a></p>
</div>
  
  
  <h4 id="_yuyi919_utils_trackMergePipe_function_1_" data-uid="@yuyi919/utils!trackMergePipe:function(1)">trackMergePipe(target, source)</h4>
  <div class="markdown level1 summary"><p>栈合并</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function trackMergePipe&lt;Object, Source&gt;(target: Object, ...source: Source[]): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Object</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Source[]</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>Object</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Source</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="_yuyi919_utils_trackMergePipe_function_1__remarks">&#22791;&#27880;</h5>
  <div class="markdown level1 remarks"><p>实现细节见: <a href="https://www.lodashjs.com/docs/latest#_mergewithobject-sources-customizer">https://www.lodashjs.com/docs/latest#_mergewithobject-sources-customizer</a></p>
</div>
  
  
  <h4 id="_yuyi919_utils_trackMergePipe_function_2_" data-uid="@yuyi919/utils!trackMergePipe:function(2)">trackMergePipe(target, source)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function trackMergePipe&lt;Object, Source&gt;(target: Object, ...source: any[]): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Object</span></td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any[]</span></td>
        <td><em>source</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>Object</em></td>
        <td></td>
      </tr>
      <tr>
        <td><em>Source</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_Trasaction_function_1_" data-uid="@yuyi919/utils!Trasaction:function(1)">Trasaction(trasactionKey)</h4>
  <div class="markdown level1 summary"><p>事务锁定修饰符，保证一个async/返回一个Promise的函数的时序性</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function Trasaction(trasactionKey?: string): MethodDecorator;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>trasactionKey</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">MethodDecorator</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_useAdapter_function_1_" data-uid="@yuyi919/utils!useAdapter:function(1)">useAdapter(adapter, adapterKey)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function useAdapter&lt;T = FunctionFactory.Base&gt;(adapter: IKeyValueMap&lt;T&gt;, adapterKey: Exclude&lt;TKey, symbol&gt;): typeof stubObjectStatic | T;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IKeyValueMap</span>&lt;T&gt;</td>
        <td><em>adapter</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">Exclude</span>&lt;<span class="xref">TKey</span>, symbol&gt;</td>
        <td><em>adapterKey</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>typeof <span class="xref">stubObjectStatic</span> | T</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_uuid_function_1_" data-uid="@yuyi919/utils!uuid:function(1)">uuid()</h4>
  <div class="markdown level1 summary"><p>生成uuid</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function uuid(): string;</code></pre>
  </div>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_validateModelField_function_1_" data-uid="@yuyi919/utils!validateModelField:function(1)">validateModelField(model, fieldName, validator)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function validateModelField(model: any, fieldName: any, validator: any): any;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>model</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>fieldName</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">any</span></td>
        <td><em>validator</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">any</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_valuesToLabels_function_1_" data-uid="@yuyi919/utils!valuesToLabels:function(1)">valuesToLabels(options, value)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function valuesToLabels(options: Option[], value: SearchKey&lt;string&gt;): string[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Option</span>[]</td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;string&gt;</td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_valuesToLabels_function_2_" data-uid="@yuyi919/utils!valuesToLabels:function(2)">valuesToLabels(options, value, joinKey)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function valuesToLabels(options: Option[], value: SearchKey&lt;string&gt;, joinKey: string): string;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Option</span>[]</td>
        <td><em>options</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;string&gt;</td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>joinKey</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_valueToLabel_function_1_" data-uid="@yuyi919/utils!valueToLabel:function(1)">valueToLabel(optionList, value)</h4>
  <div class="markdown level1 summary"><p>转换value为label</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function valueToLabel(optionList: Option[], value: SearchKey&lt;string&gt;): string | undefined;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Option</span>[]</td>
        <td><em>optionList</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">SearchKey</span>&lt;string&gt;</td>
        <td><em>value</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string | undefined</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_waitingLock_function_1_" data-uid="@yuyi919/utils!waitingLock:function(1)">waitingLock(lockSet)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function waitingLock(lockSet: Set&lt;Promise&lt;unknown&gt;&gt;): boolean | Promise&lt;unknown&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Set</span>&lt;<span class="xref">Promise</span>&lt;unknown&gt;&gt;</td>
        <td><em>lockSet</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>boolean | <span class="xref">Promise</span>&lt;unknown&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_withAsyncOr_function_1_" data-uid="@yuyi919/utils!withAsyncOr:function(1)">withAsyncOr(target, when, or)</h4>
  <div class="markdown level1 summary"><p>逻辑工具函数 接收一个值，如果是非Promise则自动包装为Promise 如果传入值为Promise，可传入回调函数 如果传入值为非Promise，可传入回调函数</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function withAsyncOr&lt;T&gt;(target: T | Promise&lt;T&gt;, when?: (resolving: boolean) =&gt; void, or?: () =&gt; void): Promise&lt;T&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>T | <span class="xref">Promise</span>&lt;T&gt;</td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">(resolving: boolean) =&gt; void</span></td>
        <td><em>when</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">() =&gt; void</span></td>
        <td><em>or</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span>&lt;T&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_zipEmptyData_function_1_" data-uid="@yuyi919/utils!zipEmptyData:function(1)">zipEmptyData(target, isRemoveRepeat)</h4>
  <div class="markdown level1 summary"><p>压缩数据结构，清除所有空值 对象为key-value对会删除值为空的key，如果对象为Array会挤掉空的下标，但不会影响下标顺序</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function zipEmptyData&lt;T = any&gt;(target: Array&lt;T | undefined | null&gt;, isRemoveRepeat?: boolean): T[];</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Array</span>&lt;T | undefined | null&gt;</td>
        <td><em>target</em></td>
        <td>
          <p>目标对象</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isRemoveRepeat</em></td>
        <td>
          <p>是否移除重复（浅比较）的值（默认为true）</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T[]</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="_yuyi919_utils_zipEmptyData_function_2_" data-uid="@yuyi919/utils!zipEmptyData:function(2)">zipEmptyData(target, isRemoveRepeat)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">&#22768;&#26126;</h5>
  <div class="codewrapper">
    <pre><code class="lang-typeScript hljs">export declare function zipEmptyData&lt;T = any&gt;(target: IKeyValueMap&lt;T | undefined | null&gt;, isRemoveRepeat?: boolean): IKeyValueMap&lt;T&gt;;</code></pre>
  </div>
  <h5 class="parameters">&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IKeyValueMap</span>&lt;T | undefined | null&gt;</td>
        <td><em>target</em></td>
        <td>
          
          
        </td>
      </tr>
      <tr>
        <td><span class="xref">boolean</span></td>
        <td><em>isRemoveRepeat</em></td>
        <td>
          
          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">&#36820;&#22238;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#31867;&#22411;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">IKeyValueMap</span>&lt;T&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">&#31867;&#22411;&#21442;&#25968;</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>&#21517;&#31216;</th>
        <th>&#25551;&#36848;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><em>T</em></td>
        <td></td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
