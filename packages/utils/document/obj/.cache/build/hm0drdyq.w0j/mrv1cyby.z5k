<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>utils package </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="utils package ">
    <meta name="generator" content="docfx 2.43.3.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="../toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        <div class="article row grid">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="">

<!-- Do not edit this file. It is automatically generated by API Documenter. -->
<p><a href="index.html">Home</a> &gt; <a href="utils.html">@yuyi919/utils</a></p>
<h2 id="utils-package">utils package</h2>
<p>yuyi</p>
<h2 id="classes">Classes</h2>
<table>
<thead>
<tr>
<th>Class</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="utils.autorunclass.html">AutoRunClass</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.eventemitter.html">EventEmitter</a></td>
<td><b><i>(BETA)</i></b> 事件发射器<!-- -->订阅事件 见<!-- -->.subscribe()<!-- -->发射事件 见<a href="utils.eventemitter.emit.html">emit()</a><!-- -->销毁 见<a href="utils.eventemitter.dispose.html">dispose()</a></td>
</tr>
<tr>
<td><a href="utils.eventstore.html">EventStore</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.eventstoreprovider.html">EventStoreProvider</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.httpbox.html">HttpBox</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.list.html">List</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.recordmapstore.html">RecordMapStore</a></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="enumerations">Enumerations</h2>
<table>
<thead>
<tr>
<th>Enumeration</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="utils.edateformatter.html">EDateFormatter</a></td>
<td>常用formatter模板</td>
</tr>
</tbody>
</table>
<h2 id="functions">Functions</h2>
<table>
<thead>
<tr>
<th>Function</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="utils.argshifter.html">argShifter(fn, startIndex, endIndex)</a></td>
<td>函数参数偏移</td>
</tr>
<tr>
<td><a href="utils.autobindobj.html">autoBindObj(obj, isCloneDeep)</a></td>
<td>自动绑定对象中的方法的this</td>
</tr>
<tr>
<td><a href="utils.castarray.html">castArray(value, allowEmpty)</a></td>
<td>将一个非数组值转换为数组</td>
</tr>
<tr>
<td><a href="utils.castcomputed.html">castComputed(computedFunc, computedArgs)</a></td>
<td>计算用函数</td>
</tr>
<tr>
<td><a href="utils.castcomputed_1.html">castComputed(nativeValue, args)</a></td>
<td>计算用函数（同一性）</td>
</tr>
<tr>
<td><a href="utils.castcomputedpipe.html">castComputedPipe(func, value)</a></td>
<td>计算用管道函数，如果非函数则传递值自身</td>
</tr>
<tr>
<td><a href="utils.castfunction.html">castFunction(withFunction, raw)</a></td>
<td>将参数转换为function</td>
</tr>
<tr>
<td><a href="utils.castobject.html">castObject(target, keyInObject, checkRequired)</a></td>
<td>转化一个对象为object 如果对象不是object，则返回一个嵌入指定key的新对象 可选第三个参数，判断条件变更为是否存在指定key的对象</td>
</tr>
<tr>
<td><a href="utils.caststring.html">castString(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.cleantimeprofile.html">cleanTimeProfile()</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.connectto.html">connectTo(target, source, keyNames)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.convertarr2map.html">convertArr2Map(arr)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.convertkeys2valuesmap.html">convertKeys2ValuesMap(obj)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.convertmap2unieqarray.html">convertMap2UnieqArray(obj, defineKey)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.convertoptions2map.html">convertOptions2Map(arr, labelKey, valKey)</a></td>
<td>将下拉OptionList转化为Map<!-- -->&lt;<!-- -->value, label<!-- -->&gt;<!-- -->用于快速翻译查表</td>
</tr>
<tr>
<td><a href="utils.convertvalueoption.html">convertValueOption(valueList, useLabel)</a></td>
<td>将一个数据数组转换为OptoinsList</td>
</tr>
<tr>
<td><a href="utils.createdecoratorbase.html">createDecoratorBase(key, value)</a></td>
<td>创建装饰器</td>
</tr>
<tr>
<td><a href="utils.createequalsmatcher.html">createEqualsMatcher(searchKey)</a></td>
<td>提供匹配方法/正则/匹配项数组/其它，返回通用匹配方法</td>
</tr>
<tr>
<td><a href="utils.creategroupwith.html">createGroupWith(list, keyOrWith)</a></td>
<td>根据条件将一个数组拆分为多个数组</td>
</tr>
<tr>
<td><a href="utils.createobjectkey.html">createObjectKey(obj)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.createsearchmatcher.html">createSearchMatcher(searchKey)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.createsimpletimebufferinput.html">createSimpleTimeBufferInput(callback, instance, time, isDeepDiff)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.createtrasaction.html">createTrasaction(runner)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.deeppatchupdate.html">deepPatchUpdate(data, next, options)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.defaultfromkey.html">defaultFromKey(target, key, source)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.downloadfile.html">downloadFile(fileId, fileName, getUrl)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.expectto.html">expectTo(value, configs, elseValue)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.filterkeys.html">filterKeys(target, filter)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.filtermap.html">filterMap(arr, igronFilter, formatter)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.filtermapwith.html">filterMapWith(arr, igronValue, formatter)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.filterto.html">filterTo(expect, values)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.format.html">format(value, formatter)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.formattercol.html">formatterCol(col)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.generatelock.html">generateLock(lockSet, taskId)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.generatenamespace.html">generateNamespace(target, keyName, prevIndex)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.generatenamespace2.html">generateNamespace2(target, keyName, extendsIndex)</a></td>
<td>生成实例的内部实现细节存储空间(namespace)</td>
</tr>
<tr>
<td><a href="utils.getage.html">getAge(birthday, offset)</a></td>
<td>比较生日和当前日期取得年龄</td>
</tr>
<tr>
<td><a href="utils.getage_1.html">getAge(birthday, current)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getcodelistbykey.html">getCodeListByKey(codeType)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getcodelistbykey_1.html">getCodeListByKey(codeType, optionFactory)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getconstructor.html">getConstructor(Target)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getdaterange.html">getDateRange(days, end)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getday.html">getDay(format)</a></td>
<td>取得日期</td>
</tr>
<tr>
<td><a href="utils.getday_1.html">getDay(offset, format)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getday_2.html">getDay(offset, format)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getfuture.html">getFuture(offset)</a></td>
<td>返回明天</td>
</tr>
<tr>
<td><a href="utils.getitemcontainer.html">getItemContainer(item, defaultContainer, appendKeys)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getlistdifferent.html">getListDifferent(listA, listB, deep)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getoptions.html">getOptions(optionList, searchKey, keyMatcherFunc, findOne)</a></td>
<td>使用关键字从optionList中获取匹配的option</td>
</tr>
<tr>
<td><a href="utils.getoptionsbykey.html">getOptionsByKey(optionList, searchKey, findOne)</a></td>
<td>通过Label或Value从optionList中获取匹配的option</td>
</tr>
<tr>
<td><a href="utils.getoptionsbylabel.html">getOptionsByLabel(optionList, searchName)</a></td>
<td>使用关键字从optionList中获取匹配的option</td>
</tr>
<tr>
<td><a href="utils.getoptionsbylabel_1.html">getOptionsByLabel(optionList, searchName, findOne)</a></td>
<td>使用关键字从optionList中获取匹配的option</td>
</tr>
<tr>
<td><a href="utils.getoptionsbyvalue.html">getOptionsByValue(optionList, searchValue)</a></td>
<td>使用关键字从optionList中获取匹配的option</td>
</tr>
<tr>
<td><a href="utils.getoptionsbyvalue_1.html">getOptionsByValue(optionList, searchValue, findOne)</a></td>
<td>使用关键字从optionList中获取匹配的option</td>
</tr>
<tr>
<td><a href="utils.getoptionsselectedmatch.html">getOptionsSelectedMatch(option, searchName)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getpropbypath.html">getPropByPath(obj, path, strict)</a></td>
<td>根据 object对象的path路径获取值。 Gets the property value at path of <code>object</code>.</td>
</tr>
<tr>
<td><a href="utils.getpropbypath2.html">getPropByPath2(obj, path, strict)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getreallength.html">getRealLength(str)</a></td>
<td>获得字符串实际长度，中文占2，英文占1</td>
</tr>
<tr>
<td><a href="utils.getsafemapoptions.html">getSafeMapOptions(options, defaultValue)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.gettime.html">getTime()</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.gettimeprofile.html">getTimeProfile()</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.gettype.html">getType(v)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getvalueandpath.html">getValueAndPath(values, options)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getvalueandpath_1.html">getValueAndPath(values, allowPath)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getvaluepath.html">getValuePath(values, options)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getvaluepath_1.html">getValuePath(values, allowPath)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getvaluepathiterator.html">getValuePathIterator(values, options)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getvaluepathiterator_1.html">getValuePathIterator(values, allowPath)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.getvaluepathiteratorrunner.html">getValuePathIteratorRunner(values, allowPath, parentKey)</a></td>
<td>迭代器(递归版本)</td>
</tr>
<tr>
<td><a href="utils.getyesterday.html">getYesterday(offset, format)</a></td>
<td>返回昨天</td>
</tr>
<tr>
<td><a href="utils.hackconstructor.html">hackConstructor(Target, hack, prefix)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.hoursdiff.html">hoursDiff(targetDate, currentDate)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.injectnamespace.html">injectNamespace(target, keyName, initialValue, options)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isboolornum.html">isBoolOrNum(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isemptyarray.html">isEmptyArray(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isemptyarraystrict.html">isEmptyArrayStrict(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isemptydata.html">isEmptyData(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isemptyobject.html">isEmptyObject(value, checkValue)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isemptyvalue.html">isEmptyValue(value)</a></td>
<td>是否为空或异常值，不包括0 空值: null/undefined/'' 异常值: NaN 不包括空对象/空数组</td>
</tr>
<tr>
<td><a href="utils.isequal.html">isEqual(value, other, noStrict)</a></td>
<td>深比较两个值是否相等</td>
</tr>
<tr>
<td><a href="utils.isfunction.html">isFunction(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.islabelmatcheditem.html">isLabelMatchedItem(labelSearcher, item)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.islabelmatcheditembymatcher.html">isLabelMatchedItemByMatcher(keyMatcher, item)</a></td>
<td>ttttttt</td>
</tr>
<tr>
<td><a href="utils.isnan.html">isNaN(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isnilall.html">isNilAll(valueArr)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isnotemptyarray.html">isNotEmptyArray(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isnotemptyarraystrict.html">isNotEmptyArrayStrict(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isnotemptydata.html">isNotEmptyData(value)</a></td>
<td>不为空的数据</td>
</tr>
<tr>
<td><a href="utils.isnotemptyobject.html">isNotEmptyObject(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isnotemptystring.html">isNotEmptyString(str)</a></td>
<td>判断非空字符串</td>
</tr>
<tr>
<td><a href="utils.isnotemptyvalue.html">isNotEmptyValue(value)</a></td>
<td>是否非空且非异常值，不包括0 空值: null/undefined/'' 不包括空对象/空数组</td>
</tr>
<tr>
<td><a href="utils.isnotnil.html">isNotNil(value)</a></td>
<td>检查<code>value</code>是否为 <code>null</code> 或 <code>undefined</code></td>
</tr>
<tr>
<td><a href="utils.isnum.html">isNum(value, allowNaN)</a></td>
<td>判断一个值是否为数字</td>
</tr>
<tr>
<td><a href="utils.isnumber.html">isNumber(value, allowNaN)</a></td>
<td>判断一个值是否为数字</td>
</tr>
<tr>
<td><a href="utils.isnumstrict.html">isNumStrict(value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isoptionsitemselected.html">isOptionsItemSelected(option, searchName, selectedValue)</a></td>
<td>判断是否选择项</td>
</tr>
<tr>
<td><a href="utils.ispureobj.html">isPureObj(target)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isvaluematcheditem.html">isValueMatchedItem(valueSearcher, item)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isvaluematcheditembymatcher.html">isValueMatchedItemByMatcher(keyMatcher, item)</a></td>
<td>ttttttt</td>
</tr>
<tr>
<td><a href="utils.jsxif.html">jsxIf(bool, when, elseValue)</a></td>
<td><b><i>(BETA)</i></b></td>
</tr>
<tr>
<td><a href="utils.labelstovalues.html">labelsToValues(options, label)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.labelstovalues_1.html">labelsToValues(options, label, joinKey)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.labeltovalue.html">labelToValue(optionList, label)</a></td>
<td>转换value为label</td>
</tr>
<tr>
<td><a href="utils.likearray.html">likeArray(target, other)</a></td>
<td>判断两个数组是否相似</td>
</tr>
<tr>
<td><a href="utils.logger.html">logger(name, time)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.maptokeyvalues.html">mapToKeyValues(array, key)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.mergefuncpipe.html">mergeFuncPipe(funcA, funcB)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.modelvalidator.html">modelValidator(fieldName, validator)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.multiplesplit.html">MultipleSplit(txt, str, index)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.nexttick.html">nextTick()</a></td>
<td>等待下一帧cpu时序</td>
</tr>
<tr>
<td><a href="utils.parsetime.html">parseTime(time, cFormat)</a></td>
<td>Created by jiachenpan on 16/11/18.</td>
</tr>
<tr>
<td><a href="utils.patchupdate.html">patchUpdate(data, next, options)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.pathreturn.html">pathReturn(instance, params, isConfirm, useBack)</a></td>
<td>组件返回</td>
</tr>
<tr>
<td><a href="utils.pipe.html">pipe(initialValue, funcArr)</a></td>
<td>管道</td>
</tr>
<tr>
<td><a href="utils.reactiononce.html">reactionOnce(expression, match, emitValue)</a></td>
<td>(mobx)反应式追踪一个值的变化，并在符合要求的情况时注销追踪</td>
</tr>
<tr>
<td><a href="utils.reducemap.html">reduceMap(collection, callback, accumulator)</a></td>
<td>近似_.map，callback需返回一个Object，最后将所有返回的Object组合为一个Object</td>
</tr>
<tr>
<td><a href="utils.reducemap_1.html">reduceMap(collection, callback, accumulator)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.searchformatter.html">searchFormatter(searchTarget, replaceKey, formatter, targetInnerKey)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.shiftkeygroup.html">shiftKeyGroup(obj, shiftKeysMap, shiftMode)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.shiftkeygroup_1.html">shiftKeyGroup(obj, shiftKeysMap, shifter)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.simpletimebuffer.html">simpleTimeBuffer(time, isDeepDiff, callback, emitter)</a></td>
<td>创建一个简单的时间缓冲Promise</td>
</tr>
<tr>
<td><a href="utils.simpletimebufferinput.html">simpleTimeBufferInput(key, value, callback, time, isDeepDiff)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.sleep.html">sleep(time, emitValue, isError)</a></td>
<td>异步等候</td>
</tr>
<tr>
<td><a href="utils.stubfunction.html">stubFunction(args)</a></td>
<td>一个静态函数</td>
</tr>
<tr>
<td><a href="utils.stubobjectreturn.html">stubObjectReturn(arg, args)</a></td>
<td>一个只有返回功能的静态函数</td>
</tr>
<tr>
<td><a href="utils.stubobjectstatic.html">stubObjectStatic(args)</a></td>
<td>一个静态函数，返回一个对象</td>
</tr>
<tr>
<td><a href="utils.stubreturn.html">stubReturn(arg, args)</a></td>
<td>一个只有返回功能的静态函数</td>
</tr>
<tr>
<td><a href="utils.stubreturn_1.html">stubReturn()</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.stubreturn2nd.html">stubReturn2nd(arg1, arg2, args)</a></td>
<td>一个只有返回功能的静态函数</td>
</tr>
<tr>
<td><a href="utils.stubreturnargs.html">stubReturnArgs(args)</a></td>
<td>一个只有返回功能的静态函数</td>
</tr>
<tr>
<td><a href="utils.timeprofile.html">timeProfile()</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.todatestring.html">toDateString(value, formatter)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.trackmerge.html">trackMerge(object, source, options)</a></td>
<td>栈合并</td>
</tr>
<tr>
<td><a href="utils.trackmergepipe.html">trackMergePipe(target, source)</a></td>
<td>栈合并</td>
</tr>
<tr>
<td><a href="utils.trackmergepipe_1.html">trackMergePipe(target, source)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.trasaction.html">Trasaction(trasactionKey)</a></td>
<td>事务锁定修饰符，保证一个async/返回一个Promise的函数的时序性</td>
</tr>
<tr>
<td><a href="utils.useadapter.html">useAdapter(adapter, adapterKey)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.uuid.html">uuid()</a></td>
<td>生成uuid</td>
</tr>
<tr>
<td><a href="utils.validatemodelfield.html">validateModelField(model, fieldName, validator)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.valuestolabels.html">valuesToLabels(options, value)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.valuestolabels_1.html">valuesToLabels(options, value, joinKey)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.valuetolabel.html">valueToLabel(optionList, value)</a></td>
<td>转换value为label</td>
</tr>
<tr>
<td><a href="utils.waitinglock.html">waitingLock(lockSet)</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.withasyncor.html">withAsyncOr(target, when, or)</a></td>
<td>逻辑工具函数 接收一个值，如果是非Promise则自动包装为Promise 如果传入值为Promise，可传入回调函数 如果传入值为非Promise，可传入回调函数</td>
</tr>
<tr>
<td><a href="utils.zipemptydata.html">zipEmptyData(target, isRemoveRepeat)</a></td>
<td>压缩数据结构，清除所有空值 对象为key-value对会删除值为空的key，如果对象为Array会挤掉空的下标，但不会影响下标顺序</td>
</tr>
<tr>
<td><a href="utils.zipemptydata_1.html">zipEmptyData(target, isRemoveRepeat)</a></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="interfaces">Interfaces</h2>
<table>
<thead>
<tr>
<th>Interface</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="utils.decoratorcontextbase.html">DecoratorContextBase</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.deeppathupdateoptions.html">DeepPathUpdateOptions</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.expector.html">Expector</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.icommonformcontainer.html">ICommonFormContainer</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.icommonformcontainertarget.html">ICommonFormContainerTarget</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.iescapeconvert.html">IEscapeConvert</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.ieventstore.html">IEventStore</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.ieventstorebase.html">IEventStoreBase</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.igetpathresult.html">IGetPathResult</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.iitemconfig.html">IItemConfig</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.imaptransformer.html">IMapTransformer</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.itypefilterutils.html">ITypeFilterUtils</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.itypeutils.html">ITypeUtils</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.pathupdateoptions.html">PathUpdateOptions</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.pathupdateresult.html">PathUpdateResult</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.trackmergeoptions.html">TrackMergeOptions</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.trasactiongenerator.html">TrasactionGenerator</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.valuepathiteratoroptions.html">ValuePathIteratorOptions</a></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="namespaces">Namespaces</h2>
<table>
<thead>
<tr>
<th>Namespace</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="utils.filterfunction.html">FilterFunction</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.filterto.html">filterTo</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.isequal.html">isEqual</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.list.html">List</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.observable__.html">Observable$$</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.pipe.html">pipe</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.setter.html">Setter</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.shiftkeygroup.html">shiftKeyGroup</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.trasaction.html">Trasaction</a></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="variables">Variables</h2>
<table>
<thead>
<tr>
<th>Variable</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="utils.clonetransform.html">cloneTransform</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.emptyobject.html">emptyObject</a></td>
<td>一个静态的不可变空对象</td>
</tr>
<tr>
<td><a href="utils.escapeconvert.html">EscapeConvert</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.expect_.html">expect$</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.geteventemitter.html">getEventEmitter</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.testemitter.html">testEmitter</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.testgroup.html">testGroup</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.tmptransformerweak.html">tmpTransformerWeak</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.trackmergeto.html">trackMergeTo</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.typefilterutils.html">typeFilterUtils</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.typeutils.html">typeUtils</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.waitingpromise.html">waitingPromise</a></td>
<td>异步等候</td>
</tr>
</tbody>
</table>
<h2 id="type-aliases">Type Aliases</h2>
<table>
<thead>
<tr>
<th>Type Alias</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="utils.callbackfunction.html">CallbackFunction</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.dateformatter.html">DateFormatter</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.filterfunction.html">FilterFunction</a></td>
<td>过滤函数类型</td>
</tr>
<tr>
<td><a href="utils.ikeydata.html">IKeyData</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.injectcontainer.html">InjectContainer</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.injectnamespaceoptions.html">InjectNamespaceOptions</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.itypefilters.html">ITypeFilters</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.itypemetafilters.html">ITypeMetaFilters</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.itypeotherfilters.html">ITypeOtherFilters</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.keymatcherfunc.html">KeyMatcherFunc</a></td>
<td>ttttttt</td>
</tr>
<tr>
<td><a href="utils.keywordmatcher.html">KeywordMatcher</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.multipleexpector.html">MultipleExpector</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.nativeorprop.html">NativeOrProp</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.notfunction.html">NotFunction</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.option.html">Option</a></td>
<td><b><i>(BETA)</i></b> Option接口</td>
</tr>
<tr>
<td><a href="utils.optionbase.html">OptionBase</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.optionsearcher.html">OptionSearcher</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.propertykeydefined.html">PropertyKeyDefined</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.propformatter.html">PropFormatter</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.reducemapobjectiterator.html">ReduceMapObjectIterator</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.remotesearcher.html">RemoteSearcher</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.searchkey.html">SearchKey</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.service.html">Service</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.subscription.html">Subscription</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.tdate.html">TDate</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.timebufferconfig.html">TimeBufferConfig</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.tmoment.html">TMoment</a></td>
<td></td>
</tr>
<tr>
<td><a href="utils.typedmethoddecorator.html">TypedMethodDecorator</a></td>
<td></td>
</tr>
</tbody>
</table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                  <li>
                    <a href="https://github.com/yuyiRai/yuyi-core/blob/master/packages/utils/document/articles/utils.md/#L1" class="contribution-link">&#25913;&#21892;&#27492;&#25991;&#26723;</a>
                  </li>
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
